{
	"menu.file": "Файл",
	"menu.edit": "Правка",
	"menu.editor": "Редактор",
	"menu.view": "Показать",
	"menu.help": "Помощь",
	
	"cmd.new": "Новый проект",
	"cmd.new.info": "Создать новый проект",
	"cmd.open": "Открыть",
	"cmd.open.info": "Открыть сохраненный проект",
	"cmd.save": "Сохранить",
	"cmd.save.info": "Сохранить текущий проект",
	"cmd.saveas": "Сохранить как",
	"cmd.saveas.info": "Сохранить текущий проект в новый файл",
	"cmd.formedit": "Редактор форм",
	"cmd.formedit.info": "Визуальный редактор форм",
	"cmd.delete": "Удалить",
	"cmd.delete.info": "Удалить выделенные элементы",
	"cmd.run": "Запустить",
	"cmd.run.info": "Запустить текущий проект на выполнение",
	"cmd.about": "О программе",
	"cmd.about.info": "Открыть диалог \"О программе\"",
	"cmd.cut": "Вырезать",
	"cmd.copy": "Копировать",
	"cmd.comment": "Комментарий",
	"cmd.paste": "Вставить",
	"cmd.slidedown": "Сместить вниз",
	"cmd.slideright": "Сместить вправо",
	"cmd.selectall": "Выделить все",
	"cmd.forum": "Форум",
	"cmd.back": "Выйти из контейнера",
	"cmd.back.info": "Выйти из текущего контейнера наверх",
	"cmd.forward": "Зайти в контейнер",
	"cmd.forward.info": "Зайти в текущий контейнер",
	"cmd.mail": "Отправить письмо",
	"cmd.bringtofront": "Переместить наверх",
	"cmd.sendtoback": "Переместить вниз",
	"cmd.makehint": "Создать подсказку",
	"cmd.remove_lh": "Удалить подсказку",
	"cmd.zoomin": "Увеличить схему",
	"cmd.zoomout": "Уменьшить схему",
	"cmd.capture": "Экспорт в PNG",
	"cmd.sha_source": "Скачать схему",
	"cmd.paste_debug": "Debug",
	"cmd.paste_dodata": "DoData",
	"cmd.paste_hub": "Hub",
	"cmd.login": "Войти",
	"cmd.profile": "Профиль",
	"cmd.logout": "Выйти",
	"cmd.share": "Поделиться",
	"cmd.undo": "Отменить",
	"cmd.redo": "Вернуть",
	"cmd.tools": "Настройки",
	"cmd.statistic": "Статистика",
	"cmd.output": "Окно вывода",
	
	"tab.interface": "Интерфейс",
	"group.standart": "Стандартные",
	"group.special": "Специальные",
	"tab.tools": "Инструменты",
	"group.math": "Математика",
	"group.logic": "Логика",
	"group.containers": "Контейнеры",
	"group.cables": "Кабели",
	"tab.array": "Массивы",
	"tab.strings": "Строки",
	"tab.files": "Файлы",
	"tab.controls": "Контролы",
	"tab.remote": "Интернет",
	"tab.graphics": "Графика",
	"group.tools": "Инструменты",
	"group.shapes": "Фигуры",
	"tab.helpers": "Помощники",
	"group.design": "Дизайн",
	"group.spheme": "Схема",
	"group.core": "Ядро",
	"group.json": "JSON",
	"group.matrix": "Матрица",
	"tab.firebase": "Firebase",
	"group.fbnode": "Нода",
	"group.fbuser": "Пользователь",
	"tab.vk": "ВКонтакте",
	"group.audiolist": "Аудиозаписи",
	
	"ui.close": "Закрыть",
	"ui.cancel": "Отменить",
	"ui.save": "Сохранить",
	"ui.copy": "Копировать",
	
	"ui.title": "Заголовок",
	"ui.tag": "Тег",
	"ui.icon": "Иконка",
	"ui.category": "Категория",
	"ui.value": "Значение",
	"ui.name": "Имя",
	"ui.width": "Ширина",
	"ui.align": "Выравнивание",
	"ui.type": "Тип",
	
	"ui.settings": "Настройки",
	"ui.autosaveopt": "Опции автосохранения",
	"ui.ascurproject": "Сохранять текущий проект при запуске",
	"ui.astabs": "Список открытых документов",
	"ui.asgroups": "Список открытых свитков в палитре элементов",
	"ui.other": "Прочее",
	"ui.newprojectonload": "Создать новый проект после загрузки IDE",
	"ui.meeditor": "Редактор MultiElement",
	"ui.meposoffset": "Смещение положения",
	"ui.palspoiler": "Свитки",
	"ui.palopenonenter": "Развернуть свиток при наведении мыши",
	"ui.palautoclose": "Закрыть все свитки кроме выбранного",
	"ui.codeeditor": "Редактор кода",
	"ui.ceshowlines": "Показывать номера строк",
	"ui.celinewrap": "Переносить длинные строки",
	
	"ui.toolbareditor": "Редактор панели инструментов",
	"ui.projstat": "Статистика проекта",
	"ui.urleditor": "Редактор URL",
	"ui.dropimagehere": "Сбросте файл с картинкой сюда...",
	"ui.coleditor": "Редактор колонок",
	"ui.shareproject": "Поделится проектом",
	"ui.shareprjcanrun": "Другие пользователи могут запускать этот проект",
	
	"ui.self_props": "Свои свойства",
	"ui.sys_props": "Системные свойства",
	
	"ui.hiondescr": "Online версия конструктора для знакомства с основами визуального программирования на основе блоков.",
	
	"ui.statecount": "Количество элементов",
	"ui.statincursdk": "В текущем контейнере",
	"ui.statsdknum": "Количество контейнеров",
	"ui.statintel": "Элементов среды",
	"ui.statlinkednum": "Ссылочных элементов",
	"ui.statlinkedpoints": "Связанных точек",
	
	"wincontrol.Left": "Отступ слева",
	"wincontrol.Top": "Отступ сверху",
	"wincontrol.Width": "Ширина элемента",
	"wincontrol.Height": "Высота элемента",
	"wincontrol.position": "Положение элемента",
	"wincontrol.Grow": "Приоритет занимаемого элементом свободного пространства родителя",
	"wincontrol.Shrink": "Сжимаемость элемента",
	"wincontrol.AlignSelf": "Выравнивание элемента",
	"wincontrol.Margin": "Отступ элемента от краев родителя и соседних элементов",
	"wincontrol.Enabled": "Доступность элемента для управления пользователем",
	"wincontrol.Visible": "Видимость элемента на форме",
	"wincontrol.Hint": "Подсказка к элементу",
	"wincontrol.TabIndex": "Порядок передачи фокуса элементу",
	"wincontrol.Theme": "Название класса CSS",
	"wincontrol.splitter": "Разделитель",
	"wincontrol.Edge": "Сторона элемента, к которой присоединить разделитель",
	"wincontrol.SplitterSize": "Размер разделителя в пикселях",
	"wincontainer.layout": "Слой",
	
	"element.Color": "Цвет элемента в редакторе",
	"element.Comment": "Комментарий к элементу",
	
	"el.MainForm": "Главная форма",
	"MainForm.doCaption": "Устанавливает текст заголовка формы",
	"MainForm.doShow": "Отображает форму на экране",
	"MainForm.doClose": "Закрывает форму",
	"MainForm.onCreate": "Событие происходит всякий раз после создания и отображения формы на экране",
	
	"el.Button": "Кнопка",
	"Button.Data": "Данные, отдаваемые в поток",
	"Button.onClick": "Событие происходит всякий раз при нажатии кнопки",
	
	"el.Edit": "Поле ввода",
	"Edit.doText": "Устанавливает текст в поле ввода",
	"Edit.onChange": "Событие происходит всякий раз после изменения текста в поле ввода и потери им фокуса",
	"Edit.Str": "Текст для записи в поле ввода",
	"Edit.Text": "Содержит текущий текст в поле ввода",
	
	"el.NumberEdit": "Числовое поле ввода",
	"NumberEdit.doNumber": "Устанавливает число в поле ввода",
	"NumberEdit.onChange": "Событие происходит всякий раз после изменения числа в поле ввода и выдает его в поток",
	"NumberEdit.Number": "Содержит текущее число из поля ввода",
	"NumberEdit.Value": "Определяет число для установки в поле ввода",
	
	"el.Label": "Надпись",
	"Label.doCaption": "Устанавливает текст надписи",
	
	"el.CheckBox": "Флажок",
	"CheckBox.doCheck": "Устанавливает значение флажка",
	"CheckBox.onCheck": "Событие происходит всякий раз после изменения состояния флажка и выдает его в поток",
	"CheckBox.Checked": "Содержит текущее значение флажка",
	
	"el.RadioButton": "Группа переключателей",
	"RadioButton.doCheck": "Выбирает текущий переключатель",
	"RadioButton.onCheck": "Событие происходит всякий раз при изменении состояния переключателя и выдает его значение в поток",
	"RadioButton.Checked": "Содержит 1 если переключатель выбран и 0 - в противном случае",
	
	"el.Image": "Картинка",
	"Image.doLoad": "Загружает картинку в элемент из указанного адреса",
	"Image.onLoad": "Событие происходит после загрузки изображения",
	"Image.URL": "Адрес изображения для загрузки",
	
	"el.ProgressBar": "Панель состояния",
	"ProgressBar.doPosition": "Устанавливает позицию прогресса",
	"ProgressBar.Position": "Содержит текущую величину прогресса",
	
	"el.Memo": "Редактор текста",
	"Memo.doAdd": "Добавляет новую строку в конец текста",
	"Memo.doText": "Устанавливает текст в редакторе",
	"Memo.Text": "Содержит текущий текст в редакторе",
	"Memo.Position": "Содержит позицию каретки в редакторе",
	"Memo.Str": "Определяет строку для добавления в конец текста",
	
	"el.TrackBar": "Ползунок",
	"TrackBar.doPosition": "Устанавливает позицию ползунка",
	"TrackBar.onPosition": "Происходит всякий раз после изменения положения ползунка и выдает его значение в поток",
	"TrackBar.Value": "Содержит текущую позицию ползунка",
	
	"el.ListBox": "Список строк",
	"ListBox.doAdd": "Добавляет новую строку в список",
	"ListBox.doText": "Устанавливает строки (в качестве разделителя используется перенос строк)",
	"ListBox.doReplace": "Заменяет текст выбранного элемента списка на значение из потока",
	"ListBox.onSelect": "Событие происходит всякий раз после выбора элемента списка и выдает в поток его Text/Index",
	"ListBox.doSelectIndex": "Выбирает элемент списка, индекс которого указан в потоке",
	"ListBox.doSelectText": "Выбирает элемент списка, текст которого указан в потоке",
	"ListBox.onClick": "Событие происходит всякий раз после клика по элементу списка и выдает в поток его Text/Index",
	"ListBox.Text": "Содержит текущий текст",
	"ListBox.SelectIndex": "Содержит индекс выбранного элемента списка или -1 если ничего не выбрано",
	"ListBox.SelectString": "Содержит текст выбранного элемента списка или пустую строку если ничего не выбрано",
	"ListBox.Str": "Определяет строку для добавления в список",
	
	"el.ComboBox": "Выпадающий список",
	"ComboBox.doAdd": "Добавляет новую строку в список",
	"ComboBox.doText": "Устанавливает строки (в качестве разделителя используется перенос строк)",
	"ComboBox.doSelectIndex": "Выбирает элемент списка, индекс которого указан в потоке",
	"ComboBox.doSelectText": "Выбирает элемент списка, текст которого указан в потоке",
	"ComboBox.onSelect": "Событие происходит всякий раз после выбора элемента списка и выдает в поток его Text/Index",
	"ComboBox.Text": "Содержит текущий текст",
	"ComboBox.SelectIndex": "Содержит индекс выбранного элемента списка или -1 если ничего не выбрано",
	"ComboBox.SelectString": "Содержит текст выбранного элемента списка или пустую строку если ничего не выбрано",
	"ComboBox.Str": "Определяет строку для добавления в список",
	
	"el.PaintBox": "Панель рисования",
	"PaintBox.doDraw": "Очищает панель и начинает процедуру отрисовки",
	"PaintBox.onDraw": "Событие происходит всякий раз после начала процедуры отрисовки графики",
	"PaintBox.Canvas": "Содержит канву для рисования",
	
	"el.VideoPlayer": "Видео плеер",
	"VideoPlayer.doPlay": "Начинает проигрывание видео",
	"VideoPlayer.doPause": "Приостанавливает проигрывание видео",
	"VideoPlayer.onPlay": "Событие происходит всякий раз после завершения проигрывания видео",
	"VideoPlayer.Paused": "Содержит 1 если видео остановлено и 0 в противном случае",
	
	"el.AudioPlayer": "Аудио плеер",
	"AudioPlayer.doPlay": "Начинает проигрывание аудио",
	"AudioPlayer.doPause": "Приостанавливает проигрывание аудио",
	"AudioPlayer.onPlay": "Событие происходит всякий раз после завершения проигрывания аудио",
	"AudioPlayer.Paused": "Содержит 1 если аудио остановлено и 0 в противном случае",
	
	"el.Figure": "Фигура",
	
	"el.Loader": "Лоадер",
	
	"el.Switcher": "Переключатель",
	"Switcher.doOn": "Изменяет состояние переключателя",
	"Switcher.onState": "Событие происходит всякий раз после изменения состояния переключателя и выдает его в поток",
	"Switcher.State": "Содержит текущее состояние переключателя",
	
	"el.Panel": "Панель",
	
	"el.DropBox": "Панель приема файлов",
	"DropBox.onDropFile": "Событие происходит всякий раз после сбрасывания файлов на панель и выдает их по очереди в поток",
	"DropBox.onEndDrop": "Событие происходит всякий раз после окончания выдачи сброшенных файлов в поток событием onDropFile",
	
	"el.ScrollBox": "Панель прокрутки",
	
	"el.CSS": "Таблица стилей",
	
	"el.ToolBar": "Панель инструментов",
	"ToolBar.onClick": "Событие происходит всякий раз после нажатия кнопки на панели инструментов и выдает ее индекс в поток",
	
	"el.SimpleTable": "Таблица",
	"SimpleTable.doAddRow": "Добавляет данные в таблицу",
	"SimpleTable.doClear": "Очищает таблицу",
	"SimpleTable.doSelectIndex": "Выбирает сктору таблицы, индекс которой указан в потоке",
	"SimpleTable.onSelect": "Событие происходит всякий раз после выбора строки таблицы и выдает ее индекс в поток",
	"SimpleTable.onClick": "Событие происходит всякий раз после клика по строке таблицы и выдает ее индекс в поток",
	
	"el.YaMap": "Карты Yandex",
	"YaMap.doGoto": "Переход в точку по указанным координатам",
	"YaMap.doPlacemark": "Установить метку на карте по указанным координатам с заданной подсказкой и текстом",
	"YaMap.onCoords": "Событие происходит всякий раз после клика на карте и выдает координаты точки в поток",
	
	"el.YouTube": "Проигрывание роликов YouTube",
	
	"tab.googlechart": "Диаграммы",
	"group.chartdata": "Данные диаграмм",
	"group.chart": "Google диаграммы",
	
	"el.ChartData": "Данные диаграммы",
	"ChartData.Data": "Содержит массив данных для построения диаграммы",
	
	"el.ChartDataSet": "Изменение данных диаграммы",
	"ChartDataSet.doSet": "Устанавливает ячейку данных в заданное значение",
	"ChartDataSet.onSet": "Событие происходит всякий раз после установки данных и выдает в поток ссылку на массив данных диаграммы",
	"ChartDataSet.Data": "Определяет массив с данными диаграммы",
	"ChartDataSet.Row": "Строка данных в массиве",
	"ChartDataSet.Column": "Столбец данных",
	"ChartDataSet.Value": "Значение",

	"el.ChartDataAddColumn": "Добавление колонки",
	"ChartDataAddColumn.doAdd": "Добавляет колонку с заданным названием в массив данных",
	"ChartDataAddColumn.onAdd": "Событие происходит всякий раз после добавления колонки и выдает в поток ссылку на массив данных диаграммы",
	"ChartDataAddColumn.Data": "Определяет массив с данными диаграммы",
	"ChartDataAddColumn.Title": "Название колонки",
	
	"el.ChartDataAddRow": "Добавление строки",
	"ChartDataAddRow.doAdd": "Добавляет строку с данными в массив (строка должна быть массивом, где элементы расположены в порядке добавления колонок)",
	"ChartDataAddRow.onAdd": "Событие происходит всякий раз после добавления строки и выдает в поток ссылку на массив данных диаграммы",
	"ChartDataAddRow.Data": "Определяет массив с данными диаграммы",
	"ChartDataAddRow.Value": "Строка со значениями колонок массива данных",
	
	"el.ChartPie": "Круговая диаграмма",
	
	"el.ChartGauge": "Диаграмма с циферблатом",
	
	"el.ChartLine": "Линейная диаграмма",
	
	"el.Firebase": "Облачная БД Firebase",
	"Firebase.onInit": "Событие происходит всякий раз после загрузки скриптов для работы с Firebase",
	"Firebase.onAuthStateChanged": "Событие происходит всякий раз после изменения состояния авторизации пользователя и выдает его в поток",
	
	"el.FBNode": "Нода дерева в БД",
	"FBNode.doReference": "Создает узел по заданному пути",
	"FBNode.onReference": "Событие происходит всякий раз после создания узла и выдает его в поток",
	"FBNode.Node": "Содержит созданный узел",
	"FBNode.Path": "Определяет путь для создания узла",
	
	"el.FBSendMessage": "Запись данных в БД",
	"FBSendMessage.doSend": "Записывает данные в указанный узел",
	"FBSendMessage.onSend": "Событие происходит всякий раз после записи данных в указанный узел и выдает его в поток",
	"FBSendMessage.Node": "Определяет узел для записи данных",
	"FBSendMessage.Message": "Определяет данные для записи в узел",
	
	"el.FBReadMessage": "Чтение данных узла",
	"FBReadMessage.doRead": "Читает данные указанного узла",
	"FBReadMessage.onRead": "Событие происходит всякий раз после чтения данных узла и выдает их в поток",
	"FBReadMessage.Node": "Определяет узел для чтения данных",
	
	"el.FBFilter": "Фильтрация данных",
	"FBFilter.doFilter": "Фильтрует данные, получаемые с сервера",
	"FBFilter.onFilter": "Событие происходит всякий раз после установки фильтра и выдает исходный узел в поток",
	"FBFilter.Node": "Определяет узел для установки фильтра",
	"FBFilter.Value": "Определяет значение фильтра",
	
	"el.FBListen": "Отслеживание изменений данных",
	"FBListen.doListen": "Устанавливает слушителя на изменение данных в указанном узле",
	"FBListen.onListen": "Событие происходит всякий раз после срабатывания слушателя и выдает измененные данные в поток",
	"FBListen.Node": "Определяет узел для установки слушателя",
	
	"el.FBUserCreate": "Регистрация нового пользователя",
	"FBUserCreate.doCreate": "Создает нового пользователя",
	"FBUserCreate.onCreate": "Событие происходит всякий раз после успешного создания пользователя",
	"FBUserCreate.onError": "Событие происходит всякий раз после не успешного создания пользователя и выдает в поток код и текст ошибки",
	"FBUserCreate.EMail": "Определяет e-mail нового пользователя",
	"FBUserCreate.Password": "Определяет пароль нового пользователя",
	
	"el.FBUserSignIn": "Авторизация пользователя",
	"FBUserSignIn.doSignIn": "Авторизует пользователя по заданному типу авторизации",
	"FBUserSignIn.doSignOut": "Отменяет авторизацию пользователя",
	"FBUserSignIn.onSignIn": "Событие происходит всякий раз после успешной авторизации пользователя",
	"FBUserSignIn.onError": "Событие происходит всякий раз после ошибки авторизации и выдает в поток код и текст ошибки",
	"FBUserSignIn.EMail": "Опредяет e-mail пользователя для его авторизации",
	"FBUserSignIn.Password": "Опредяет пароль пользователя для его авторизации",
	
	"el.FBUserProfile": "Профиль пользователя",
	"FBUserProfile.doDisplayName": "Устанавливает отображаемое имя пользователя",
	"FBUserProfile.doPhotoURL": "Устанавливает ссылку на аватар пользователя",
	"FBUserProfile.DisplayName": "Содержит отображаемое имя пользователя",
	"FBUserProfile.EMail": "Содержит e-mail пользователя",
	"FBUserProfile.PhotoURL": "Содержит ссылку на аватар пользователя",
	"FBUserProfile.UID": "Содержит уникальный идентификатор пользователя",
	
	"el.PointXY": "Точка",
	"PointXY.X": "Координата X точки",
	"PointXY.Y": "Координата Y точки",
	"PointXY.Point": "Точка XY",
	
	"el.FillStyle": "Стиль заливки",
	"FillStyle.doFill": "Устанавливает стиль заливки",
	"FillStyle.onFill": "Событие происходит всякий раз после установки стиля заливки и выдает канву в поток",
	"FillStyle.Canvas": "Задает канву для изменения стиля заливки",
	"FillStyle.Color": "Определяет цвет заливки",
	
	"el.StrokeStyle": "Стиль бордюра",
	"StrokeStyle.doStroke": "Устанавливает стиль бордюра",
	"StrokeStyle.onStroke": "Событие происходит всякий раз после установки стиля бордюра и выдает канву в поток",
	"StrokeStyle.Canvas": "Задает канву для изменения стиля бордюра",
	"StrokeStyle.Color": "Определяет цвет бордюра",
	"StrokeStyle.Width": "Определяет толщину бордюра",
	
	"el.RGB": "RGB",
	"RGB.doRGB": "Преобразует компоненты цвета в цвет по заданному формату",
	"RGB.onRGB": "Событие происходит всякий раз после преобразования компонент в цвет и выдает результат в поток",
	"RGB.R": "Красная компонента цвета",
	"RGB.G": "Зеленая компонента цвета",
	"RGB.B": "Синяя компонента цвета",
	"RGB.A": "Alpha компонента цвета",
	"RGB.Color": "Содержит результат преобразования компонент в цвет",
	
	"el.Line": "Линия",
	"Line.Point1": "Определяет начальную точку отрисовки линии",
	"Line.Point2": "Определяет конечную точку отрисовки линии",
	
	"el.Rectangle": "Прямоугольник",
	"Rectangle.Point1": "Определяет начальную точку диагонали прямоугольника",
	"Rectangle.Point2": "Определяет конечную точку диагонали прямоугольника",
	
	"el.Circle": "Окружность",
	"Circle.Point": "Определяет координаты центра окружности",
	"Circle.Radius": "Определяет радиус окружности",
	
	"el.DrawText": "Текст",
	"DrawText.Point": "Определяет координаты точки, относительно которой рисуется текст",
	"DrawText.Text": "Определяет текст для отрисовки",
	
	"el.DrawImage": "Изображение",
	"DrawImage.Point": "Определяет координаты левого верхнего угла изображения",
	"DrawImage.Image": "Определяет изображение для отрисовки",
	
	"el.DrawImageRegion": "Часть изображения",
	"DrawImageRegion.Point": "Определяет координаты левого верхнего угла изображения",
	"DrawImageRegion.Image": "Определяет изображение для отрисовки",
	"DrawImageRegion.doSourceX": "Задает координату X левого верхнего угла исходного изображения для отрисовки",
	"DrawImageRegion.doSourceY": "Задает координату Y левого верхнего угла исходного изображения для отрисовки",
	
	"el.Converter": "Преобразование данных",
	"Converter.doConvert": "Преобразует исходные данные в заданный тип",
	"Converter.onConvert": "Событие происходит всякий раз после преобразования данных и выдает результат в поток",
	"Converter.Data": "Определяет данные для преобразования",
	"Converter.Result": "Содержит результат преобразования",
	
	"el.Stack": "Стек",
	"Stack.doPush": "Сохраняет указанные данные в стеке",
	"Stack.doPop": "Извлекает из стека данные",
	"Stack.onPush": "Событие происходит всякий раз после сохранения данных в стеке и выдает эти данные в поток",
	"Stack.onPop": "Событие происходит всякий раз после извлечения данных из стека и выдает их в поток",
	"Stack.Data": "Определяет данные для добавления в стек",
	"Stack.Result": "Содержит данные извлеченные из стека",
	
	"el.GlobalVar": "Глобальная переменная",
	"GlobalVar.doValue": "Устанавливает значение глобальной переменной",
	"GlobalVar.onValue": "Событие происходит всякий раз после установки значения глобальной переменной и выдает ее в поток",
	"GlobalVar.Var": "Содержит значение глобальной переменной",
	
	"el.Time": "Время",
	"Time.doTime": "Получает текущее время системы",
	"Time.onTime": "Событие происходит всякий раз после получения текущего времени",
	"Time.FormatTime": "Содержит полученное время системы в соответствии с выбранным форматом",
	"Time.TimeMillis": "Содержит полученное время системы в миллисекундах",
	
	"el.Counter": "Целочисленный счетчик",
	"Counter.doNext": "Генерирует следующее значение счетчика",
	"Counter.onCounter": "Событие происходит всякий раз после генерации следующего значения счетчика и выдает его в поток",
	
	"el.Random": "Случайное действительное число",
	"Random.doRandom": "Генерирует следующее случайное число",
	"Random.onRandom": "Событие происходит всякий раз при генерации случайного числа и выдает в поток само число",
	"Random.Result": "Содержит результат последней генерации",
	
	"el.MathParse": "Вычисление математического выражения",
	"MathParse.doCalc": "Вычисляет результат математического выражения свойства MathStr",
	"MathParse.onResult": "Происходит после успешного вычисления математического выражения и выдает результат в поток",
	"MathParse.Result": "Хранит результаты предыдущего вычисления",
	"MathParse.X": "Аргумент для вставки в математическое выражение",
	
	"el.If_else": "Сравнение двух операндов",
	"If_else.doCompare": "Производит сравнение первого операнда со вторым",
	"If_else.onTrue": "Событие происходит всякий раз при выполнении условия сравнения",
	"If_else.onFalse": "Событие происходит всякий раз при невыполнении условия сравнения",
	"If_else.Op1": "Операнд 1",
	"If_else.Op2": "Операнд 2",
	
	"el.Case": "Каскадная проверка",
	"Case.doCase": "Производит сравнение значения из потока с параметром Value",
	"Case.onNextCase": "Событие происходит всякий раз при неравенстве значения из потока значению параметра Value и выдает в поток исходные данные",
	"Case.onTrue": "Событие происходит всякий раз при равенстве значения из потока значению параметра Value и выдает в поток данные из ячейки DataOnTrue",
	
	"el.For": "Цикл",
	"For.doFor": "Запускает цикл со счетчиком",
	"For.doStop": "Преждевременная остановка цикла",
	"For.onEvent": "Событие происходит всякий раз после очередной итерации цикла и выдает значение счетчика в поток",
	"For.onStop": "Событие происходит всякий раз после окончания цикла",
	"For.Position": "Возвращает текущее значение счетчика",
	"For.Start": "Определяет начальное значение счетчика",
	"For.End": "Определяет значение, при пересечении которого происходит выход из цикла",
	
	"el.Hub": "Разветвитель",
	"Hub.doEvent": "Вызывает последовательно все события onEvent",
	"Hub.onEvent": "Событие происходит всякий раз после вызова метода doEvent",
	
	"el.DoData": "Преобразователь данных в поток",
	"DoData.doData": "Перенаправляет данные с точки Data или одноименного свойства в поток",
	"DoData.onEventData": "Событие происходит всякий раз при перенаправлении данных в поток",
	"DoData.Data": "Данные для перенаправления в поток",
	
	"el.Memory": "Ячейка памяти",
	"Memory.doValue": "Запоминает данные в памяти",
	"Memory.doClear": "Устанавливает ячейку памяти в исходное состояние (т.е. приравнивает ей значение по умолчанию)",
	"Memory.onData": "Событие происходит всякий раз после изменения данных, их же и выдавая обратно в поток",
	"Memory.Data": "Данные для сохранения в памяти",
	"Memory.Value": "Содержит текущее значение ячейки памяти",
	
	"el.IndexToChannel": "Преобразование индекса в поток",
	"IndexToChannel.doEvent": "Вызывает одно из событий onEvent в соответствие с его индексом (верхний индекс равен 0). Если индекс больше, чем кол-во точек onEvent, то ничего не происходит",
	"IndexToChannel.Index": "Определяет индекс вызываемого события",
	"IndexToChannel.onEvent": "Событие происходит всякий раз после определения канала по индексу",
	
	"el.ChannelToIndex": "Преобразование потока в индекс",
	"ChannelToIndex.onIndex": "Событие происходит после вызова одного из методов doWork и возвращает в поток индекс этого метода (верхний индекс равен 0)",
	"ChannelToIndex.doWork": "Вызывает событие onEvent со своим индексом в потоке",
	
	"el.TimeCounter": "Счетчик времени",
	"TimeCounter.doStart": "Запоминает текущее значение времени",
	"TimeCounter.doStop": "Вычисляет разницу между текущим и сохранённым временем",
	"TimeCounter.onStart": "Событие происходит всякий раз после сохранения текущего времени",
	"TimeCounter.onStop": "Событие происходит всякий раз после получения разницы времени и выдаёт её в поток",
	"TimeCounter.Elapsed": "Содержит разницу времени с последнего измерения",
	
	"el.Switch": "Переключатель",
	"Switch.doSwitch": "Переключить состояние с On на Off или наоборот с Off на On",
	"Switch.doReset": "Сбросить компонент в состояние Выключено(Off)",
	"Switch.doOn": "Переключить в состояние Включено(On)",
	"Switch.onSwitch": "Событие происходит после изменения состояния и выдает в поток DataOn в состояние Включено(On) или DataOff в состояние Выключено(Off)",
	"Switch.onOn": "Событие происходит всякий раз при переходе компонента в состояние Включено(On) и выдает в поток DataOn",
	"Switch.onOff": "Событие происходит всякий раз при переходе компонента в состояние Выключено(Off) и выдает в поток DataOff",
	"Switch.State": "Содержит текущее состояние ключа",
	"Switch.DataOn": "Определяет данные для состояния Включено(On)",
	"Switch.DataOff": "Определяет данные для состояния Выключено(Off)",
	
	"el.MultiElementEx": "Контейнер",
	
	"el.CableWork": "Кабель источник события",
	"CableWork.onCable": "Событие происходит всякий раз после вызова любого метода и выдает в поток сигнал с именем канала и данными из потока",
	
	"el.CableEvent": "Кабель приемник события",
	"CableEvent.doCable": "Передает сигнал по каналу с заданным именем и исходными данными",
	
	"el.CableVar": "Кабель запроса данных",
	"CableVar.Cable": "Запрашивает данные по каналу с заданным именем",
	
	"el.CableData": "Кабель источник данных",
	"CableData.Cable": "Содержит данные из заданного канала",
	
	"el.Array": "Массив",
	"Array.doClear": "Очищает массив",
	"Array.onClear": "Событие происходит всякий раз после очистки массива",
	"Array.Array": "Содержит ссылку на массив",

	"el.Matrix": "Двумерный массив",
	"Matrix.doClear": "Очищает матрицу",
	"Matrix.onClear": "Событие происходит всякий раз после очистки матрицы",
	"Matrix.Array": "Содержит ссылку на матрицу",
	
	"el.MatrixEnum": "Перебор элементов матрицы",
	"MatrixEnum.doEnum": "Перебирает все элементы матрицы",
	"MatrixEnum.onEnum": "Событие происходит всякий раз после получения очередного элемента и выдает его в поток",
	"MatrixEnum.onEnd": "Событие происходит всякий раз после окончания перебора",
	"MatrixEnum.Matrix": "Определяет матрицу для перебора элементов",
	"MatrixEnum.Item": "Содержит текущий элемент матрицы",
	"MatrixEnum.Index": "Содержит указатель(массив) строки и столбца текущего элемента в формате [row,col]",
	
	"el.ArrayRead": "Чтение массива",
	"ArrayRead.doRead": "Читает элемент массива с указанным индексом",
	"ArrayRead.onRead": "Событие происходит всякий раз после чтения элемента массива и выдает его в поток",
	"ArrayRead.Array": "Определяет массив для чтения элемента",
	"ArrayRead.Index": "Определяет индекс элемента для чтения",
	
	"el.ArrayWrite": "Запись массива",
	"ArrayWrite.doWrite": "Записывает элемент массива с указанным индексом",
	"ArrayWrite.onWrite": "Событие происходит всякий раз после записи элемента массива и выдает массив в поток",
	"ArrayWrite.Array": "Определяет массив для записи элемента",
	"ArrayWrite.Index": "Определяет индекс элемента для записи",
	"ArrayWrite.Value": "Определяет значение элемента",
	
	"el.ArrayAdd": "Добавление элемента",
	"ArrayAdd.doAdd": "Добавляет элемент в массив",
	"ArrayAdd.onAdd": "Событие происходит всякий раз после добавления элемента в массив и выдает массив в поток",
	"ArrayAdd.Array": "Определяет массив для добавления элемента",
	"ArrayAdd.Value": "Определяет значение нового элемента",
	
	"el.ArrayRemove": "Удаление элемента",
	"ArrayRemove.doRemove": "Удаляет элемент из массива",
	"ArrayRemove.onRemove": "Событие происходит всякий раз после удаления элемента из массива и выдает массив в поток",
	"ArrayRemove.Array": "Определяет массив для удаления элемента",
	"ArrayRemove.Index": "Определяет индекс удаляемого элемента",
	
	"el.ArrayEnum": "Перебор элементов",
	"ArrayEnum.doEnum": "Перебирает элементы массива",
	"ArrayEnum.onEnum": "Событие происходит всякий раз после получения очередного элемента и выдает его в поток",
	"ArrayEnum.onEnd": "Событие происходит всякий раз после окончания перебора элементов",
	"ArrayEnum.Array": "Определяет массив для перебора элементов",
	
	"el.ArraySplit": "Преобразование строки в массив",
	"ArraySplit.doSplit": "Разбивает строку по указанному разделителю на элементы массива",
	"ArraySplit.onSplit": "Событие происходит всякий раз после разбиения строки и выдает полученный массив в поток",
	"ArraySplit.String": "Определяет строку для преобразования в массив",
	
	"el.ArraySize": "Размер массива",
	"ArraySize.doSize": "Получает размер массива",
	"ArraySize.onSize": "Событие происходит всякий раз после получения размера массива и выдает его в поток",
	"ArraySize.Size": "Содержит размер массива",
	"ArraySize.Array": "Массив для определения его размера",
	
	"el.ArrayBuilder": "Конструктор массива",
	"ArrayBuilder.doBuild": "Собирает массив из заданных элементов",
	"ArrayBuilder.onBuild": "Событие происходит всякий раз после сборки массива и выдает его в поток",
	
	"el.JSON": "Преобразование между строкой и JSON",
	"JSON.doConvert": "Преобразует строку в JSON или наоборот",
	"JSON.onConvert": "Событие происходит всякий раз после преобразования и выдает результат в поток",
	"JSON.Data": "Определяет данные для преобразования",
	"JSON.Result": "Содержит результат преобразования",
	
	"el.JSON_Field": "Чтение значения поля объекта",
	"JSON_Field.doGet": "Читает поле с указанным именем для заданного объекта",
	"JSON_Field.onGet": "Событие происходит всякий раз после чтения поля и выдает его значение в поток",
	"JSON_Field.Object": "Определяет объект для чтения его поля",
	"JSON_Field.Name": "Определяет имя поля объекта",
	"JSON_Field.Result": "Содержит значение поля объекта после чтения",
	
	"el.JSON_Enum": "Перебор полей объекта",
	"JSON_Enum.doEnum": "Перебирает все поля объекта",
	"JSON_Enum.onEnum": "Событие происходит всякий раз после получения имени очередного поля объекта и выдает его в поток",
	"JSON_Enum.onEndEnum": "Событие происходит всякий раз после окончания перебора",
	"JSON_Enum.Object": "Определяет объект для перебора его полей",
	
	"el.JSON_Field_Set": "Запись значения поля объекта",
	"JSON_Field_Set.doSet": "Записывание указанное значение в поле объекта с заданным именем",
	"JSON_Field_Set.onSet": "Событие происходит всякий раз после записи значения и выдает объект обратно в поток",
	"JSON_Field_Set.Object": "Определяет объект, поле которого необходимо записать",
	"JSON_Field_Set.Name": "Определяет имя поля объекта",
	"JSON_Field_Set.Value": "Определяет значение для записи",

	"el.Object": "Пустой объект ",
	"Object.doCreate": "Создает пустой объект",
	"Object.onCreate": "Событие происходит всякий раз после создания объекта и выдает его в поток",
	"Object.Object": "Содержит ссылку на созданный объект",
	
	"el.StrList": "Список строк",
	"StrList.doAdd": "Добавляет строку в список",
	"StrList.doText": "Инициализирует список строками разделенными символом \n",
	"StrList.onChange": "Событие происходит всякий раз при изменении списка строк",
	"StrList.Text": "Хранит список строк, разделенных символом \n",
	"StrList.Array": "Содержит список в виде массива строк",
	"StrList.Str": "Определяет строку для добавления в список",
	
	"el.StrCat": "Соединение двух строк в одну",
	"StrCat.doStrCat": "Соединяет строки Str1 и Str2",
	"StrCat.onStrCat": "Событие происходит всякий раз при соединении двух строк и выдает результат в поток",
	"StrCat.Result": "Содержит результат операции",
	"StrCat.Str1": "Строка 1",
	"StrCat.Str2": "Строка 2",
	
	"el.Copy": "Копирование части строки",
	"Copy.doCopy": "Копирует из строки Str символы, начиная с позиции Position в количестве Count штук",
	"Copy.onCopy": "Событие происходит всякий раз после копирования части строки и выдает ее в поток",
	"Copy.Result": "Хранит результат операции",
	"Copy.Str": "Определяет строку, из которой необходимо скопировать символы",
	"Copy.Position": "Определяет позицию, с которой копируются символы",
	"Copy.Count": "Определяет кол-во копируемых символов",
	
	"el.FormatStr": "Форматирование строки по маске",
	"FormatStr.doString": "Формирует строку по маске Mask",
	"FormatStr.onFString": "Событие происходит всякий раз после формирования строки и выдает ее в поток",
	"FormatStr.FString": "Содержит результат формирования строки по маске",
	"FormatStr.Str": "Определяет строку для вставки в маску вместо %N",
	
	"el.Position": "Позиция вхождения одной строки в другую",
	"Position.doPosition": "Производит поиск строки Search в строке String, начиная с позиции FromIndex",
	"Position.onPosition": "Событие происходит всякий раз при завершении поиска и выдает найденную позицию в поток",
	"Position.Result": "Содержит найденную позицию",
	"Position.String": "Определяет строку, в которой производится поиск",
	"Position.Search": "Определяет строку, позицию вхождения которой необходимо найти",
	"Position.FromIndex": "Определяет начальную позицию поиска",
	
	"el.Replace": "Замена части строки",
	"Replace.doReplace": "Производит замену подстроки SubStr в строке SrcStr на строку DestStr (заменяются все найденные подстроки)",
	"Replace.onReplace": "Событие происходит всякий раз после замены строки и выдает результат в поток",
	"Replace.SrcStr": "Строка, в которой происходит замена",
	"Replace.SubStr": "Подстрока, которую нужно заменить",
	"Replace.DestStr": "Подстрока, на которую нужно заменить",
	"Replace.Result": "Содержит результат замены",
	
	"el.StrPart": "Разделитель строки",
	"StrPart.doSplit": "Разбивает строку по заданному разделителю",
	"StrPart.onSplit": "Событие происходит после отделения левой части строки и выдает в поток её правую часть",
	"StrPart.onPart": "Событие происходит сразу после разбиения строки перед событием onSplit и выдает в поток её левую часть",
	"StrPart.Str": "Определяет строку для разбиения на части",
	"StrPart.Result": "Содержит левую часть строки после разбиения",
	
	"el.Insert": "Вставка одной строки в другую",
	"Insert.doInsert": "Вставляет подстроку SubStr в строку Str, начиная с позиции Position",
	"Insert.onInsert": "Событие происходит всякий раз после выполнения вставки и выдаёт результат в поток",
	"Insert.Str": "Определяет строку, в которую необходимо вставить подстроку",
	"Insert.SubStr": "Подстрока для вставки",
	"Insert.Position": "Определяет позицию, с которой вставляется подстрока (начиная с 0)",
	"Insert.Result": "Содержит результирующую строку",
	
	"el.Delete": "Удаление части строки",
	"Delete.doDelete": "Удаляет часть строки",
	"Delete.onDelete": "Событие происходит всякий раз после удаления части строки и выдает результат в поток",
	"Delete.Str": "Строка для удаления из нее заданного количества символов",
	"Delete.Position": "Позиция в строке, с которой необходимо удалить заданное количество символов",
	"Delete.Count": "Количество символов, которое необходимо удалить",
	"Delete.Result": "Содержит результат удаления части строки",
	
	"el.Length": "Длина строки",
	"Length.doLength": "Вычисляет длину строки",
	"Length.onLength": "Событие происходит всякий раз после вычисления длины строки и выдает ее в поток",
	"Length.Str": "Определяет строку, чью длину необходимо вычислить",
	"Length.Result": "Содержит результат вычисления",
	
	"el.StrCase": "Регистр символов строки",
	"StrCase.doModify": "Приводит строку Str к регистру, определяемому параметром Type",
	"StrCase.onModify": "Событие происходит всякий раз после изменения регистра строки и выдает ее в поток",
	"StrCase.Str": "Определяет строку, чей регистр необходимо изменить",
	"StrCase.Result": "Содержит результат изменения регистра",
	
	"el.RE_Search": "Поиск по регулярному выражению",
	"RE_Search.doExec": "Ищет совпадение в строке по указанной маске",
	"RE_Search.onExec": "Событие происходит всякий раз после поиска совпадений в строке и выдает результат в виде массива совпадений в поток",
	"RE_Search.onNotFound": "Событие происходит всякий раз после поиска совпадений в строке и отсутствия хотя бы одного совпадения",
	"RE_Search.String": "Определяет строку для поиска",
	
	"el.FileInfo": "Информация о файле",
	"FileInfo.doInfo": "Получает информацию о файле",
	"FileInfo.onInfo": "Событие происходит всякий раз после получения информации о файле и выдает его в поток",
	"FileInfo.Name": "Содержит имя файла",
	"FileInfo.Size": "Содержит размер файла",
	"FileInfo.Mime": "Содержит mime тип файла",
	"FileInfo.Time": "Содержит дату создания файла",
	"FileInfo.File": "Определяет файл для получения информации о нем",
	
	"el.FileRead": "Чтение файла",
	"FileRead.doRead": "Читает данные из файла",
	"FileRead.onRead": "Событие происходит всякий раз после чтения данных из файла и выдает их в поток",
	"FileRead.File": "Определяет файл для чтения данных из него",
	
	"el.ODialog": "Диалог выбора файла",
	"ODialog.doExecute": "Открывает диалог для выбора файла с текущего компьютера",
	"ODialog.onExecute": "Событие происходит всякий раз после выбора файла и выдает его в поток",
	
	"el.Message": "Всплывающее сообщение",
	"Message.doMessage": "Отображает стандартное модальное всплывающее сообщение",
	"Message.onMessage": "Событие происходит всякий раз после закрытия сообщения",
	"Message.Text": "Определяет текст для показа в сообщении",
	
	"el.Timer": "Таймер",
	"Timer.doTimer": "Запускает таймер",
	"Timer.doStop": "Останавливает таймер",
	"Timer.onTimer": "Событие происходит всякий раз при очередной итерации таймера",
	
	"el.Notification": "Всплывающее уведомление",
	"Notification.doNotify": "Показывает уведомление в трее",
	"Notification.doClose": "Принудительно закрывает уведомление",
	"Notification.onClick": "Событие происходит всякий раз после клика на уведомлении",
	"Notification.onClose": "Событие происходит всякий раз после закрытия уведомления",
	"Notification.Text": "Определяет текст уведомления",
	"Notification.Content": "Определяет содержимое уведомления",
	
	"el.Inline": "Вставка Javascript",
	
	"el.GeoLocation": "Геолокация",
	"GeoLocation.doLocation": "Определяет текущую геопозицию",
	"GeoLocation.onLocation": "Событие происходит всякий раз после определения геопозиции и выдает ее в поток",
	
	"el.Host": "Получение IP",
	"Host.doIP": "Получение текущего внешнего IP",
	"Host.onIP": "Событие происходит всякий раз после получения текущего IP и выдает его в поток",
	
	"el.HTTP_Get": "Закачка по HTTP",
	"HTTP_Get.doDownload": "Загружает содержимое указанной ссылки по HTTP протоколу",
	"HTTP_Get.onDownload": "Событие происходит всякий раз после закачки содержимого ссылки и выдает его в поток",
	"HTTP_Get.onError": "Событие происходит всякий раз после ошибки во время закачки указанного URL и выдает её код в поток",
	"HTTP_Get.URL": "Определяет URL ссылки",
	
	"el.URLBuilder": "Конструктор URL",
	"URLBuilder.doBuild": "Собирает строку URL из указанных параметров",
	"URLBuilder.onBuild": "Событие происходит всякий раз после сбора строки URL и выдает её в поток",
	"URLBuilder.Result": "Содержит результирующую строку URL",
	
	"el.XMLHttpRequest": "AJAX запрос",
	"XMLHttpRequest.doOpen": "Открывает соединение с указанным URL",
	"XMLHttpRequest.doSend": "Отправляет данные на сервер",
	"XMLHttpRequest.onLoad": "Событие происходит всякий раз после успешно�� загрузки данных и выдает их в поток",
	"XMLHttpRequest.URL": "Определяет URL, на который отправляются данные",
	"XMLHttpRequest.Content": "Определяет данные для отправки",
	"XMLHttpRequest.Data": "Содержит данные полученные от сервера",
	
	"el.VK_Init": "Инициализация VK API",
	"VK_Init.doInit": "Инициализирует VK API ",
	"VK_Init.onInit": "Событие происходит всякий раз после успешной инициализации",
	"VK_Init.AppId": "ID приложения VK",
	
	"el.VK_Auth": "Авторизация пользователя VK",
	"VK_Auth.doLogin": "Авторизовывает пользователя",
	"VK_Auth.doLogout": "Отвязывает пользователя от приложения",
	"VK_Auth.onSuccess": "Событие происходит всякий раз после успешной авторизации пользователя и выдает в поток объект пользователя",
	"VK_Auth.onError": "Событие происходит всякий раз после ошибки авторизации пользователя и выдает в поток текст ошибки",
	"VK_Auth.User": "Содержит ссылку на текущего пользователя",
	"VK_Auth.Permissions": "Сумма битовых масок разрешений приложения",
	
	"el.VK_AudioList": "Получение списка аудио записей",
	"VK_AudioList.doGet": "Запрашивает список аудиозаписей пользователя или сообщества",
	"VK_AudioList.onGet": "Событие происходит всякий раз после успешного получения списка аудиозаписей и выдает его в поток",
	"VK_AudioList.onError": "Событие происходит всякий раз после ошибки во вмя получения списка аудиозаписей и выдает её текст в поток",
	"VK_AudioList.AudioArray": "Содержит массив аудиозаписей",
	"VK_AudioList.OwnerId": "Идентификатор владельца аудиозаписей",
	"VK_AudioList.Offset": "Смещение, необходимое для выборки определенного количества аудиозаписей",
	"VK_AudioList.Count": "Количество аудиозаписей, информацию о которых необходимо вернуть",
	"VK_AudioList.AlbumId": "Идентификатор альбома с аудиозаписями",
	"VK_AudioList.AudioIds": "Идентификаторы аудиозаписей, информацию о которых необходимо вернуть",
	
	"el.VK_AudioInfo": "Доступ к информации об аудиозаписях",
	"VK_AudioInfo.doValue": "Получает информацию об аудиозаписи",
	"VK_AudioInfo.onData": "Событие происходит всякий раз после получения информации об аудиозаписи",
	"VK_AudioInfo.URL": "Содержит ссылку на mp3",
	"VK_AudioInfo.Duration": "Содержит длительность аудиозаписи в секундах",
	"VK_AudioInfo.Title": "Содержит название композиции",
	"VK_AudioInfo.AudioID": "Содержит идентификатор аудиозаписи",
	"VK_AudioInfo.OwnerID": "Содержит идентификатор владельца аудиозаписи",
	"VK_AudioInfo.Artist": "Содержит исполнителя",
	"VK_AudioInfo.LyricsID": "Содержит идентификатор текста аудиозаписи (если доступно)",
	"VK_AudioInfo.GenreID": "Содержит идентификатор жанра из списка аудио жанров",

	"el.InfoTip": "Надпись в редакторе",
	"el.LinkTip": "Гиперссылка в редакторе",
	"el.PictureTip": "Отображение картинки в редакторе",
	"el.HubEx": "Хаб",
	"el.GetDataEx": "Доступ к данным",
	
	"el.Debug": "Отладка",
	"Debug.doEvent": "Печатает в консоль текст из потока",
	"Debug.onEvent": "Событие происходит всякий раз после печати данных из потока и выдает их же обратно в поток",
	"Debug.Var": "Содержит данные с точки Data",
	"Debug.Data": "Определяет данные для точки Var",
	
	"el.hcTransmitter": "Передача данных из Hion в приложение",
	"hcTransmitter.doReturn": "Возвращает данные обратно в ядро Hion",
	"hcTransmitter.onInit": "Событие происходит всякий раз после загрузки приложения ядром Hion и выдает в поток переданные параметры"
}
