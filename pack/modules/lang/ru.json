{
	"tab.interface": "Интерфейс",
	"group.standart": "Стандартные",
	"group.special": "Специальные",
	"tab.tools": "Инструменты",
	"group.math": "Математика",
	"group.logic": "Логика",
	"group.containers": "Контейнеры",
	"group.cables": "Кабели",
	"tab.array": "Массивы",
	"tab.strings": "Строки",
	"tab.files": "Файлы",
	"tab.controls": "Контролы",
	"tab.remote": "Интернет",
	"tab.graphics": "Графика",
	"group.drawsettings": "Настройки",
	"group.path": "Контур",
	"group.drawmatrix": "Система координат",
	"group.tools": "Инструменты",
	"group.shapes": "Фигуры",
	"tab.audio": "Аудио",
	"tab.helpers": "Помощники",
	"group.audiosource": "Источники",
	"group.audiomodify": "Модификаторы",
	"group.design": "Дизайн",
	"group.spheme": "Схема",
	"group.core": "Ядро",
	"group.environment": "Окружение",
	"group.json": "JSON",
	"group.matrix": "Матрица",
	"tab.firebase": "Firebase",
	"group.fbnode": "Нода",
	"group.fbuser": "Пользователь",
	"tab.vk": "ВКонтакте",
	"group.audiolist": "Аудиозаписи",
	
	"wincontrol.Left": "Отступ слева",
	"wincontrol.Top": "Отступ сверху",
	"wincontrol.Width": "Ширина элемента",
	"wincontrol.Height": "Высота элемента",
	"wincontrol.position": "Положение элемента",
	"wincontrol.Grow": "Приоритет занимаемого элементом свободного пространства родителя",
	"wincontrol.Shrink": "Сжимаемость элемента",
	"wincontrol.AlignSelf": "Выравнивание элемента",
	"wincontrol.Margin": "Отступ элемента от краев родителя и соседних элементов",
	"wincontrol.Enabled": "Доступность элемента для управления пользователем",
	"wincontrol.Visible": "Видимость элемента на форме",
	"wincontrol.Hint": "Подсказка к элементу",
	"wincontrol.TabIndex": "Порядок передачи фокуса элементу",
	"wincontrol.Theme": "Название класса CSS",
	"wincontrol.splitter": "Разделитель",
	"wincontrol.Edge": "Сторона элемента, к которой присоединить разделитель",
	"wincontrol.SplitterSize": "Размер разделителя в пикселях",
	"wincontrol.HTMLElement": "Содержит ссылку на DOM элемент",
	
	"wincontainer.layout": "Слой",
	"wincontainer.Layout": "Тип слоя",
	"wincontainer.Wrap": "Перенос элементов слоя на следующую строку",
	"wincontainer.JustifyContent": "Выравнивание элементов по основной оси",
	"wincontainer.AlignItems": "Выравнивание элементов по поперечной оси",
	"wincontainer.AlignContent": "Выравнивание строк при заданном свойстве Wrap",
	"wincontainer.Padding": "Отступ элементов от краев родительского контейнера",
	
	"el.wincontrol": "Общий предок для всех GUI элементов",
	"wincontrol.doScrollByX": "Скролинг содержимого элемента по оси X",
	"wincontrol.doScrollByY": "Скролинг содержимого элемента по оси Y",
	"wincontrol.onClick": "Событие происходит всякий раз после клика по элементу",
	"wincontrol.onDblClick": "Событие происходит всякий раз после двойного клика по элементу",
	"wincontrol.onKeyDown": "Событие происходит всякий раз после нажатия кнопки на клавиатуре и выдает в поток данные клавиши",
	"wincontrol.onKeyPress": "Событие происходит всякий раз после нажатия и отпускания кнопки на клавиатуре и выдает в поток данные клавиши",
	"wincontrol.onKeyUp": "Событие происходит всякий раз после отпускания кнопки на клавиатуре и выдает в поток данные клавиши",
	"wincontrol.onMouseDown": "Событие происходит всякий раз после нажатия кнопки мыши и выдает в поток её данные",
	"wincontrol.onMouseMove": "Событие происходит всякий раз после движения мышкой над элементом и выдает в поток данные о параметрах мыши",
	"wincontrol.onMouseUp": "Событие происходит всякий раз после отпускания кнопки мыши и выдает в поток её данные",
	"wincontrol.onMouseOut": "Событие происходит всякий раз после покидания мышкой области элемента и выдает в поток её данные",
	"wincontrol.onMouseOver": "Событие происходит всякий раз после вхождения мыши в область элемента и выдает в поток её данные",
	"wincontrol.onMouseWheel": "Событие происходит всякий раз после вращения колесиком мыши и выдает в поток её данные",
	"wincontrol.onFocus": "Событие происходит всякий раз после перевода фокуса на элемент",
	"wincontrol.onBlur": "Событие происходит всякий раз после потери фокуса элементом",
	"wincontrol.onContextMenu": "Событие происходит всякий раз после необходимости отобразить контекстное меню элемента",
	
	"element.Color": "Цвет элемента в редакторе",
	"element.Comment": "Комментарий к элементу",
	
	"el.SiteWidget": "Виджет для сайта",
	"SiteWidget.onCreate": "Событие происходит всякий раз после создания и отображения виджета на странице",
	
	"el.MainForm": "Главная форма",
	"MainForm.doCaption": "Устанавливает текст заголовка формы",
	"MainForm.doShow": "Отображает форму на экране",
	"MainForm.doClose": "Закрывает форму",
	"MainForm.onCreate": "Событие происходит всякий раз после создания и отображения формы на экране",
	"MainForm.Caption": "Заголовок формы",
	"MainForm.URL": "Определяет URL иконки отображаемой в заголовке формы",
	"MainForm.Resize": "Разрешает или запрещает пользователю изменять размеры формы мышкой",
	"MainForm.ShowCaption": "Отображать заголовок формы",
	"MainForm.ShowBorder": "Отображать бордюр формы",
	"MainForm.Position": "Позиция формы на экране после ее показа",
	
	"el.Button": "Кнопка",
	"Button.Data": "Данные, отдаваемые в поток событием onClick",
	"Button.onClick": "Событие происходит всякий раз при нажатии кнопки",
	"Button.Caption": "Определяет надпись на кнопке",
	"Button.URL": "Определяет URL картинки, отображаемой на кнопке",
	"Button.Align": "Выравнивание картинки относительно надписи",

	"el.Edit": "Поле ввода",
	"Edit.doText": "Устанавливает текст в поле ввода",
	"Edit.onChange": "Событие происходит всякий раз после изменения текста в поле ввода и потери им фокуса",
	"Edit.Str": "Текст для записи в поле ввода",
	"Edit.Text": "Содержит текущий текст в поле ввода",
	"Edit.PlaceHolder": "Текстовая подсказка, отображаемая в поле ввода тогда, когда оно пустое",
	"Edit.Password": "Скрывать звездочками вводимый текст",
	"Edit.Pattern": "Регулярное выражение, определяющее допустимый для ввода текст",
	
	"el.NumberEdit": "Числовое поле ввода",
	"NumberEdit.doNumber": "Устанавливает число в поле ввода",
	"NumberEdit.onChange": "Событие происходит всякий раз после изменения числа в поле ввода и выдает его в поток",
	"NumberEdit.Number": "Содержит текущее число из поля ввода",
	"NumberEdit.Value": "Определяет число для установки в поле ввода",
	"NumberEdit.PlaceHolder": "Текстовая подсказка, отображаемая в поле ввода тогда, когда оно пустое",
	"NumberEdit.Min": "Определяет минимальное значение, которое можно ввести",
	"NumberEdit.Max": "Определяет максимальное значение, которое можно ввести",
	"NumberEdit.Step": "Определяет шаг, с которым можно вводить числа в поле ввода",
	
	"el.Label": "Надпись",
	"Label.doCaption": "Устанавливает текст надписи",
	"Label.Caption": "Определяет текст надписи",
	"Label.HAlign": "Выравнивание текста надписи по горизонтале",
	"Label.VAlign": "Выравнивание текста надписи по вертикале",
	"Label.Link": "Определяет ссылку, по которой осуществляется переход по клику на надписи",
	
	"el.CheckBox": "Флажок",
	"CheckBox.doCheck": "Устанавливает значение флажка",
	"CheckBox.onCheck": "Событие происходит всякий раз после изменения состояния флажка и выдает его в поток",
	"CheckBox.Checked": "Содержит текущее значение флажка",
	"CheckBox.Caption": "Определяет надпись слева от флажка",
	
	"el.RadioButton": "Группа переключателей",
	"RadioButton.doCheck": "Выбирает текущий переключатель",
	"RadioButton.onCheck": "Событие происходит всякий раз при изменении состояния переключателя и выдает его значение в поток",
	"RadioButton.Checked": "Содержит 1 если переключатель выбран и 0 - в противном случае",
	"RadioButton.Caption": "Определяет надпись слева от переключателя",
	"RadioButton.Name": "Определяет название группы переключателей, в рамках которой они видят друг друга",
	
	"el.Image": "Картинка",
	"Image.doLoad": "Загружает картинку в элемент из указанного адреса",
	"Image.onLoad": "Событие происходит после загрузки изображения",
	"Image.URL": "Адрес изображения для загрузки",
	"Image.Mode": "Определяет как именно загруженное изображение будет отображено внутри элемента",
	"Image.Image": "Содержит ссылку на элемент",
	
	"el.ProgressBar": "Панель состояния",
	"ProgressBar.doPosition": "Устанавливает позицию прогресса",
	"ProgressBar.Position": "Содержит текущую величину прогресса",
	"ProgressBar.Engine": "Указывает элементу какой движок использовать для отображения: Custom - собственный (не зависит от браузера), Native - встроенный в браузер",
	"ProgressBar.Max": "Определяет максимальное значение прогресса",
	
	"el.Memo": "Редактор текста",
	"Memo.doAdd": "Добавляет новую строку в конец текста",
	"Memo.doText": "Устанавливает текст в редакторе",
	"Memo.Text": "Содержит текущий текст в редакторе",
	"Memo.Position": "Содержит позицию каретки в редакторе",
	"Memo.Str": "Определяет строку для добавления в конец текста",
	
	"el.TrackBar": "Ползунок",
	"TrackBar.doPosition": "Устанавливает позицию ползунка",
	"TrackBar.onPosition": "Происходит всякий раз после изменения положения ползунка и выдает его значение в поток",
	"TrackBar.Value": "Содержит текущую позицию ползунка",
	"TrackBar.Min": "Определяет минимальное значение ползунка",
	"TrackBar.Max": "Определяет максимальное значение ползунка",
	"TrackBar.Step": "Определяет шаг, с котором происходит изменение значения от минимума до максимума",
	
	"el.ListBox": "Список строк",
	"ListBox.doAdd": "Добавляет новую строку в список",
	"ListBox.doText": "Устанавливает строки (в качестве разделителя используется перенос строк)",
	"ListBox.doReplace": "Заменяет текст выбранного элемента списка на значение из потока",
	"ListBox.onSelect": "Событие происходит всякий раз после выбора элемента списка и выдает в поток его Text/Index",
	"ListBox.doSelectIndex": "Выбирает элемент списка, индекс которого указан в потоке",
	"ListBox.doSelectText": "Выбирает элемент списка, текст которого указан в потоке",
	"ListBox.onClick": "Событие происходит всякий раз после клика по элементу списка и выдает в поток его Text/Index",
	"ListBox.Text": "Содержит текущий текст",
	"ListBox.SelectIndex": "Содержит индекс выбранного элемента списка или -1 если ничего не выбрано",
	"ListBox.SelectString": "Содержит текст выбранного элемента списка или пустую строку если ничего не выбрано",
	"ListBox.Str": "Определяет строку для добавления в список",
	"ListBox.Strings": "Определяет список строк для отображения в элементе",
	"ListBox.Select": "Определяет тип данных, выдаваемых событиями onSelect/onClick: Index - индекс строки, Text - саму строку",
	"ListBox.Icon": "Определяет URL иконки для добавления в список",
	
	"el.ComboBox": "Выпадающий список",
	"ComboBox.doAdd": "Добавляет новую строку в список",
	"ComboBox.doText": "Устанавливает строки (в качестве разделителя используется перенос строк)",
	"ComboBox.doSelectIndex": "Выбирает элемент списка, индекс которого указан в потоке",
	"ComboBox.doSelectText": "Выбирает элемент списка, текст которого указан в потоке",
	"ComboBox.onSelect": "Событие происходит всякий раз после выбора элемента списка и выдает в поток его Text/Index",
	"ComboBox.Text": "Содержит текущий текст",
	"ComboBox.SelectIndex": "Содержит индекс выбранного элемента списка или -1 если ничего не выбрано",
	"ComboBox.SelectString": "Содержит текст выбранного элемента списка или пустую строку если ничего не выбрано",
	"ComboBox.Str": "Определяет строку для добавления в список",
	"ComboBox.Strings": "Определяет список строк для отображения в элементе",
	"ComboBox.Select": "Определяет тип данных, выдаваемых событием onSelect: Index - индекс строки, Text - саму строку",

	"el.DatePicker": "Выбор даты",
	"DatePicker.doDate": "Устанавливает текущую дату в поле",
	"DatePicker.onSelect": "Событие происходит всякий раз после выбора даты и выдает ее в поток",
	"DatePicker.SelectDate": "Содержит выбранную дату",
	"DatePicker.Date": "Определает дату для записи в поле",
	"DatePicker.Min": "Содержит минимальную дату, которую можно выбрать в элементе",
	"DatePicker.Max": "Содержит максимальную дату, которую можно выбрать в элементе",

	"el.ColorButton": "Кнопка выбора цвета",
	"ColorButton.doColor": "Устанавливает текущий цвет",
	"ColorButton.onSelect": "Событие происходит всякий раз после выбора цвета и выдает его в поток",
	"ColorButton.SelectColor": "Содержит выбранный цвет",
	"ColorButton.Color": "Определяет цвет для задания его в элементе (формат #rrggbb)",
	
	"el.PaintBox": "Панель рисования",
	"PaintBox.doDraw": "Очищает панель и начинает процедуру отрисовки",
	"PaintBox.onDraw": "Событие происходит всякий раз после начала процедуры отрисовки графики",
	"PaintBox.Canvas": "Содержит канву для рисования",
	
	"el.VideoPlayer": "Видео плеер",
	"VideoPlayer.doPlay": "Начинает проигрывание видео",
	"VideoPlayer.doPause": "Приостанавливает проигрывание видео",
	"VideoPlayer.onPlay": "Событие происходит всякий раз после завершения проигрывания видео",
	"VideoPlayer.Paused": "Содержит 1 если видео остановлено и 0 в противном случае",
	"VideoPlayer.Controls": "Отображать/скрывать элементы управления плеером",
	"VideoPlayer.Autoplay": "Автоматически начинать проигрывать видео после загрузки приложения",
	"VideoPlayer.URL": "Опредяет URL видео файла",
	
	"el.AudioPlayer": "Аудио плеер",
	"AudioPlayer.doPlay": "Начинает проигрывание аудио",
	"AudioPlayer.doPause": "Приостанавливает проигрывание аудио",
	"AudioPlayer.onPlay": "Событие происходит всякий раз после завершения проигрывания аудио",
	"AudioPlayer.Paused": "Содержит 1 если аудио остановлено и 0 в противном случае",
	"AudioPlayer.Controls": "Отображать/скрывать элементы управления плеером",
	"AudioPlayer.Autoplay": "Автоматически начинать проигрывать аудио после загрузки приложения",
	"AudioPlayer.URL": "Опредяет URL аудио файла",

	"el.Figure": "Фигура",
	"Figure.Shape": "Тип фигуры",
	"Figure.Fill": "Цвет заливки",
	"Figure.Stroke": "Цвет бордюра",
	"Figure.StrokeWidth": "Толщина линии бордюра",
	
	"el.Loader": "Лоадер",
	"Loader.Size": "Размер внутренней части лоадера",
	"Loader.Radius": "Радиус отдельных кругов лоадера",
	
	"el.Switcher": "Переключатель",
	"Switcher.doOn": "Изменяет состояние переключателя",
	"Switcher.onState": "Событие происходит всякий раз после изменения состояния переключателя и выдает его в поток",
	"Switcher.State": "Содержит текущее состояние переключателя",
	"Switcher.On": "Определяет начальное состояние переключателя",
	
	"el.Panel": "Панель",
	
	"el.DropBox": "Панель приема файлов",
	"DropBox.onDropFile": "Событие происходит всякий раз после сбрасывания файлов на панель и выдает их по очереди в поток",
	"DropBox.onEndDrop": "Событие происходит всякий раз после окончания выдачи сброшенных файлов в поток событием onDropFile",
	
	"el.ScrollBox": "Панель прокрутки",
	
	"el.CSS": "Таблица стилей",
	"CSS.StyleSheet": "Таблица стилей элементов в формате CSS",
	
	"el.ToolBar": "Панель инструментов",
	"ToolBar.onClick": "Событие происходит всякий раз после нажатия кнопки на панели инструментов и выдает ее индекс в поток",
	"ToolBar.URL": "Определяет URL картинки размером 256 на 256 с иконками кнопок",
	"ToolBar.Buttons": "Массив кнопок панели инструментов",
	
	"el.SimpleTable": "Таблица",
	"SimpleTable.doAddRow": "Добавляет данные в таблицу",
	"SimpleTable.doClear": "Очищает таблицу",
	"SimpleTable.doSelectIndex": "Выбирает сктору таблицы, индекс которой указан в потоке",
	"SimpleTable.onSelect": "Событие происходит всякий раз после выбора строки таблицы и выдает ее Index/Row в поток",
	"SimpleTable.onClick": "Событие происходит всякий раз после клика по строке таблицы и выдает ее Index/Row в поток",
	"SimpleTable.Columns": "Список колонок таблицы",
	"SimpleTable.LineHeight": "Высота одной строки в таблице",
	"SimpleTable.ShowGrid": "Отображать сетку ячеек таблицы",
	"SimpleTable.Select": "Данные, выдаваемые в поток событиями onSelect/onClick: Index - индекс строки, Row - саму строку в виде массива, состоящего из значений колонок строки",
	"SimpleTable.Headers": "Отображать заголовок таблицы",
	
	"el.YaMap": "Карты Yandex",
	"YaMap.doGoto": "Переход в точку по указанным координатам",
	"YaMap.doPlacemark": "Установить метку на карте по указанным координатам с заданной подсказкой и текстом",
	"YaMap.onCoords": "Событие происходит всякий раз после клика на карте и выдает координаты точки в поток",
	
	"el.YouTube": "Проигрывание роликов YouTube",
	"YouTube.URL": "URL видео с сайта YouTube",
	
	"tab.ide": "Среда Hion",
	"el.hcTranslator": "Переводчик",
	"hcTranslator.doTranslate": "Переводит строку в соответствии с настройками языка в среде",
	"hcTranslator.onTranslate": "Событие происходит всякий раз после перевода строки и возвращает результат в поток",
	"hcTranslator.Key": "Определяет строку для перевода",
	
	"tab.googlechart": "Диаграммы",
	"group.chartdata": "Данные диаграмм",
	"group.chart": "Google диаграммы",
	
	"el.googlechart": "Общий элемент для google диаграмм",
	"googlechart.doDraw": "Отображает диаграмму",
	"googlechart.Data": "Данные для отображения диаграммы",
	
	"el.ChartData": "Данные диаграммы",
	"ChartData.Data": "Содержит массив данных для построения диаграммы",
	"ChartData.Array": "Массив данных диаграммы в JSON формате",
	
	"el.ChartDataSet": "Изменение данных диаграммы",
	"ChartDataSet.doSet": "Устанавливает ячейку данных в заданное значение",
	"ChartDataSet.onSet": "Событие происходит всякий раз после установки данных и выдает в поток ссылку на массив данных диаграммы",
	"ChartDataSet.Data": "Определяет массив с данными диаграммы",
	"ChartDataSet.Row": "Строка данных в массиве",
	"ChartDataSet.Column": "Столбец данных",
	"ChartDataSet.Value": "Значение",

	"el.ChartDataAddColumn": "Добавление колонки",
	"ChartDataAddColumn.doAdd": "Добавляет колонку с заданным названием в массив данных",
	"ChartDataAddColumn.onAdd": "Событие происходит всякий раз после добавления колонки и выдает в поток ссылку на массив данных диаграммы",
	"ChartDataAddColumn.Data": "Определяет массив с данными диаграммы",
	"ChartDataAddColumn.Title": "Название колонки",
	"ChartDataAddColumn.Type": "Тип данных в колонке",
	
	"el.ChartDataAddRow": "Добавление строки",
	"ChartDataAddRow.doAdd": "Добавляет строку с данными в массив (строка должна быть массивом, где элементы расположены в порядке добавления колонок)",
	"ChartDataAddRow.onAdd": "Событие происходит всякий раз после добавления строки и выдает в поток ссылку на массив данных диаграммы",
	"ChartDataAddRow.Data": "Определяет массив с данными диаграммы",
	"ChartDataAddRow.Value": "Строка со значениями колонок массива данных",
	
	"el.ChartDataRemoveRow": "Удаление строки",
	"ChartDataRemoveRow.doRemove": "Удаляет заданное количество строк из массива данных начиная с указанного индекса",
	"ChartDataRemoveRow.onRemove": "Событие происходит всякий раз после удаления строк и выдает в поток ссылку на массив данных диаграммы",
	"ChartDataRemoveRow.Data": "Определяет массив с данными диаграммы",
	"ChartDataRemoveRow.Index": "Определяет индекс, с которого будут удаляться строки",
	"ChartDataRemoveRow.Count": "Определяет количество строк для удаления",

	"el.ChartPie": "Круговая диаграмма",
	"ChartPie.Title": "Заголовок диаграммы",
	"ChartPie.Hole": "Радиус внутреннего круга(дырки)",
	"ChartPie.AreaLeft": "Отступ области диаграммы от левого края",
	"ChartPie.AreaTop": "Отступ области диаграммы от верхнего края",
	"ChartPie.AreaWidth": "Длна области диаграмыы",
	"ChartPie.AreaHeight": "Высота области диаграммы",
	
	"el.ChartGauge": "Диаграмма с циферблатом",
	
	"el.ChartLine": "Линейная диаграмма",
	
	"el.Firebase": "Облачная БД Firebase",
	"Firebase.onInit": "Событие происходит всякий раз после загрузки скриптов для работы с Firebase",
	"Firebase.onAuthStateChanged": "Событие происходит всякий раз после изменения состояния авторизации пользователя и выдает его в поток",
	"Firebase.ApiKey": "Ключ API базы данных",
	"Firebase.AuthDomain": "Название домена для авторизации пользователей (*.firebaseapp.com)",
	"Firebase.DatabaseURL": "URL домена базы данных (https://*.firebaseio.com)",
	"Firebase.StorageBucket": "Название домена для хранения данных (*.appspot.com)",
	
	"el.FBNode": "Нода дерева в БД",
	"FBNode.doReference": "Создает узел по заданному пути",
	"FBNode.onReference": "Событие происходит всякий раз после создания узла и выдает его в поток",
	"FBNode.Node": "Содержит созданный узел",
	"FBNode.Path": "Определяет путь для создания узла",
	
	"el.FBSendMessage": "Запись данных в БД",
	"FBSendMessage.doSend": "Записывает данные в указанный узел",
	"FBSendMessage.onSend": "Событие происходит всякий раз после записи данных в указанный узел и выдает его в поток",
	"FBSendMessage.Node": "Определяет узел для записи данных",
	"FBSendMessage.Message": "Определяет данные для записи в узел",
	"FBSendMessage.Mode": "Определяет действие над сообщением: Set - добавить сообщение и перезаписать все существующие данные, если они были, Push - добавить сообщение к списку, Update - обновить существующее сообщение без удаления дочерних узлов с данными",
	
	"el.FBReadMessage": "Чтение данных узла",
	"FBReadMessage.doRead": "Читает данные указанного узла",
	"FBReadMessage.onRead": "Событие происходит всякий раз после чтения данных узла и выдает их в поток",
	"FBReadMessage.Node": "Определяет узел для чтения данных",
	
	"el.FBFilter": "Фильтрация данных",
	"FBFilter.doFilter": "Фильтрует данные, получаемые с сервера",
	"FBFilter.onFilter": "Событие происходит всякий раз после установки фильтра и выдает исходный узел в поток",
	"FBFilter.Node": "Определяет узел для установки фильтра",
	"FBFilter.Value": "Определяет значение фильтра",
	"FBFilter.Mode": "Способ фильтрации сообщений: LimitToFirst - ограничить количество собщений с начала списка, LimitToLast - ограничить количество собщений с конца списка",
	
	"el.FBListen": "Отслеживание изменений данных",
	"FBListen.doListen": "Устанавливает слушителя на изменение данных в указанном узле",
	"FBListen.onListen": "Событие происходит всякий раз после срабатывания слушателя и выдает измененные данные в поток",
	"FBListen.Node": "Определяет узел для установки слушателя",
	"FBListen.Event": "Определяет событие, на которой происходит подписка: Value - изменение значения, ChildAdded - добавление дочернего узла, ChildChanged - изменение дочернего узла, ChildRemoved - удаление дочернего узла",
	
	"el.FBUserCreate": "Регистрация нового пользователя",
	"FBUserCreate.doCreate": "Создает нового пользователя",
	"FBUserCreate.onCreate": "Событие происходит всякий раз после успешного создания пользователя",
	"FBUserCreate.onError": "Событие происходит всякий раз после не успешного создания пользователя и выдает в поток код и текст ошибки",
	"FBUserCreate.EMail": "Определяет e-mail нового пользователя",
	"FBUserCreate.Password": "Определяет пароль нового пользователя",
	
	"el.FBUserSignIn": "Авторизация пользователя",
	"FBUserSignIn.doSignIn": "Авторизует пользователя по заданному типу авторизации",
	"FBUserSignIn.doSignOut": "Отменяет авторизацию пользователя",
	"FBUserSignIn.onSignIn": "Событие происходит всякий раз после успешной авторизации пользователя",
	"FBUserSignIn.onError": "Событие происходит всякий раз после ошибки авторизации и выдает в поток код и текст ошибки",
	"FBUserSignIn.EMail": "Опредяет e-mail пользователя для его авторизации",
	"FBUserSignIn.Password": "Опредяет пароль пользователя для его авторизации",
	"FBUserSignIn.Method": "Опредяет метод авторизации пользователя: PasswordAndMail - по ящику и паролю, Google - через google аккаунт",
	
	"el.FBUserProfile": "Профиль пользователя",
	"FBUserProfile.doDisplayName": "Устанавливает отображаемое имя пользователя",
	"FBUserProfile.doPhotoURL": "Устанавливает ссылку на аватар пользователя",
	"FBUserProfile.DisplayName": "Содержит отображаемое имя пользователя",
	"FBUserProfile.EMail": "Содержит e-mail пользователя",
	"FBUserProfile.PhotoURL": "Содержит ссылку на аватар пользователя",
	"FBUserProfile.UID": "Содержит уникальный идентификатор пользователя",
	
	"el.PointXY": "Точка",
	"PointXY.X": "Координата X точки",
	"PointXY.Y": "Координата Y точки",
	"PointXY.Point": "Точка XY",
	
	"el.RGB": "Получение цвета по его компонентам",
	"RGB.doRGB": "Преобразует компоненты цвета в цвет по заданному формату",
	"RGB.onRGB": "Событие происходит всякий раз после преобразования компонент в цвет и выдает результат в поток",
	"RGB.R": "Красная компонента цвета",
	"RGB.G": "Зеленая компонента цвета",
	"RGB.B": "Синяя компонента цвета",
	"RGB.A": "Alpha компонента цвета",
	"RGB.Color": "Содержит результат преобразования компонент в цвет",
	"RGB.Type": "Формат записи цвета: RGB - в формате rgb(r,g,b), где r,g,b компоненты цвета в диапозоне 0-255, RGBA - в формате rgba(r,g,b,a), где r,g,b компоненты цвета в диапозоне 0-255, и a значение alpha канала 0.0-1.0, Number - целое число в r + g*256 + b*65536, HEX - шестиричная строка #rrggbb",
	
	"el.ToRGB": "Разложение цвета на компоненты",
	"ToRGB.doGetRGB": "Раскладывает цвет на компоненты",
	"ToRGB.onRGB": "Событие происходит всякий раз после разложения цвета на компоненты и выдает их в поток",
	"ToRGB.R": "Содержит красную компоненту цвета",
	"ToRGB.G": "Содержит зеленую компоненту цвета",
	"ToRGB.B": "Содержит синюю компоненту цвета",
	"ToRGB.A": "Содержит alpha компоненту цвета",
	"ToRGB.Color": "Определяет цвет, который необходимо разложить на компоненты",
	
	"el.RenderFrameTimer": "Таймер для рендера",
	"RenderFrameTimer.doTimer": "Запускает таймер для рендера",
	"RenderFrameTimer.onTimer": "Событие происходит всякий раз после итерации очередного тика таймера",
	"RenderFrameTimer.FPS": "Содержит текущее значение FPS",
	
	"el.FillStyle": "Стиль заливки",
	"FillStyle.doFill": "Устанавливает стиль заливки",
	"FillStyle.onFill": "Событие происходит всякий раз после установки стиля заливки и выдает канву в поток",
	"FillStyle.Canvas": "Определяет канву для изменения стиля заливки",
	"FillStyle.Color": "Определяет цвет заливки",
	
	"el.StrokeStyle": "Стиль бордюра",
	"StrokeStyle.doStroke": "Устанавливает стиль бордюра",
	"StrokeStyle.onStroke": "Событие происходит всякий раз после установки стиля бордюра и выдает канву в поток",
	"StrokeStyle.Canvas": "Определяет канву для изменения стиля бордюра",
	"StrokeStyle.Color": "Определяет цвет бордюра",
	"StrokeStyle.Width": "Определяет толщину бордюра",
	"StrokeStyle.Cap": "Определяет как именно рисовать концы отрезков",
	"StrokeStyle.Join": "Определяет как именно рисовать точку соединения отрезков",
	
	"el.ShadowStyle": "Параметры тени",
	"ShadowStyle.doShadow": "Устанавливает параметры тени",
	"ShadowStyle.onShadow": "Событие происходит всякий раз после установки параметров тени и выдает канву в поток",
	"ShadowStyle.Canvas": "Определяет канву для изменения параметров тени",
	"ShadowStyle.Blur": "Определяет степень размытия тени",
	"ShadowStyle.Color": "Определяет цвет тени",
	"ShadowStyle.OffsetX": "Определяет смещение тени по оси X",
	"ShadowStyle.OffsetY": "Определяет смещение тени по оси Y",
	
	"el.CompositeOperation": "Режим смешения фигур",
	"CompositeOperation.doSet": "Устанавливает режим смешения фигур",
	"CompositeOperation.onSet": "Событие происходит всякий раз после установки режима смешения и выдает канву в поток",
	"CompositeOperation.Canvas": "Определяет канву для изменения режима смешения",
	"CompositeOperation.Type": "Режим смешения фона и рисуемой фигуры",
	
	"el.FillPattern": "Шаблон заливки",
	"FillPattern.doCreate": "Создает новый шаблон заливки фигур",
	"FillPattern.onCreate": "Событие происходит всякий раз после создания шаблона и выдает канву в поток",
	"FillPattern.Pattern": "Содержит ссылку на созданный шаблон",
	"FillPattern.Canvas": "Определяет канву для создания шаблона",
	"FillPattern.Image": "Определяет изображение, по которому необходимо создать шаблон заливки",
	"FillPattern.Repetition": "Непрерывность заливки по осям",
	
	"el.LinearGradient": "Линейный градиент",
	"LinearGradient.doCreate": "Создает линейный градиент",
	"LinearGradient.onCreate": "Событие происходит всякий раз после создания линейного градиента и выдает его в поток",
	"LinearGradient.Gradient": "Содержит созданный градиент",
	"LinearGradient.Canvas": "Определяет канву для создания градиента",
	"LinearGradient.Point1": "Определяет начальную точку отрезка, вдоль которого будет построен градиент",
	"LinearGradient.Point2": "Определяет конечную точку отрезка, вдоль которого будет построен градиент",
	"LinearGradient.X1": "Координата X начала отрезка",
	"LinearGradient.Y1": "Координата Y начала отрезка",
	"LinearGradient.X2": "Координата X конца отрезка",
	"LinearGradient.Y2": "Координата Y конца отрезка",
	
	"el.RadialGradient": "Круговой градиент",
	"RadialGradient.doCreate": "Создает круговой градиент",
	"RadialGradient.onCreate": "Событие происходит всякий раз после создания кругового градиента и выдает его в поток",
	"RadialGradient.Gradient": "Содержит созданный градиент",
	"RadialGradient.Canvas": "Определяет канву для создания градиента",
	"RadialGradient.Point1": "Определяет точку начальной окружности, с которой будет построен градиент",
	"RadialGradient.Radius1": "Определяет радиус начальной окружности",
	"RadialGradient.Point2": "Определяет точку конечной окружности, до которой будет построен градиент",
	"RadialGradient.Radius2": "Определяет радиус конечной окружности",
	"RadialGradient.X1": "Координата X начальной окружности",
	"RadialGradient.Y1": "Координата Y начальной окружности",
	"RadialGradient.X2": "Координата X конечной окружности",
	"RadialGradient.Y2": "Координата Y конечной окружности",
	
	"el.GradientStopColor": "Ключевые точки градиента",
	"GradientStopColor.doAdd": "Добавляет ключевую точку для указанного градиента",
	"GradientStopColor.onAdd": "Событие происходит всякий раз после добавления ключевой точки и выдает градиент в поток",
	"GradientStopColor.Gradient": "Определяет градиент, для которого необходимо добавить ключевую точку",
	"GradientStopColor.Index": "Определяет индекс точки",
	"GradientStopColor.Color": "Определяет цвет точки",

	"el.canvasfigure": "Общий элемент для рисования фигур",
	"canvasfigure.doDraw": "Отрисовывает фигуру на канве",
	"canvasfigure.onDraw": "Событие происходит всякий раз после рисования фигуры и выдает канву в поток",
	"canvasfigure.Canvas": "Определяет канку для рисования",
	
	"el.DrawPixel": "Отрисовка пикселя",
	"DrawPixel.Point": "Определяет координаты пикселя для отрисовки",
	"DrawPixel.X": "Координата X пикселя",
	"DrawPixel.Y": "Координата Y пикселя",
	
	"el.Line": "Линия",
	"Line.Point1": "Определяет начальную точку отрисовки линии",
	"Line.Point2": "Определяет конечную точку отрисовки линии",
	"Line.X1": "Координата X начала линии",
	"Line.Y1": "Координата Y начала линии",
	"Line.X2": "Координата X конца линии",
	"Line.Y2": "Координата Y конца линии",
	
	"el.Rectangle": "Прямоугольник",
	"Rectangle.Point1": "Определяет начальную точку диагонали прямоугольника",
	"Rectangle.Point2": "Определяет конечную точку диагонали прямоугольника",
	"Rectangle.X1": "Координата X начала диагонали прямоугольника",
	"Rectangle.Y1": "Координата Y начала диагонали прямоугольника",
	"Rectangle.X2": "Координата X конца диагонали прямоугольника",
	"Rectangle.Y2": "Координата Y конца диагонали прямоугольника",
	"Rectangle.Type": "Определяет как именно будет отрисован фон и контур фигуры: Fill - только заливка фона, Stroke - только контур, Both - заливка фона и контур",
	
	"el.RoundRectangle": "Прямоугольник со скругленными углами",
	"RoundRectangle.Point1": "Определяет начальную точку диагонали прямоугольника",
	"RoundRectangle.Point2": "Определяет конечную точку диагонали прямоугольника",
	"RoundRectangle.Radius": "Определяет радиус скругления углов прямоугольника",
	"RoundRectangle.X1": "Координата X начала диагонали прямоугольника",
	"RoundRectangle.Y1": "Координата Y начала диагонали прямоугольника",
	"RoundRectangle.X2": "Координата X конца диагонали прямоугольника",
	"RoundRectangle.Y2": "Координата Y конца диагонали прямоугольника",
	"RoundRectangle.Type": "Определяет как именно будет отрисован фон и контур фигуры: Fill - только заливка фона, Stroke - только контур, Both - заливка фона и контур",
	
	"el.Circle": "Окружность",
	"Circle.Point": "Определяет координаты центра окружности",
	"Circle.Radius": "Определяет радиус окружности",
	"Circle.X": "Координата X центра окружности",
	"Circle.Y": "Координата Y центра окружности",
	"Circle.Type": "Определяет как именно будет отрисован фон и контур фигуры: Fill - только заливка фона, Stroke - только контур, Both - заливка фона и контур",
	
	"el.DrawText": "Текст",
	"DrawText.Point": "Определяет координаты точки, относительно которой рисуется текст",
	"DrawText.Text": "Определяет текст для отрисовки",
	"DrawText.X": "Координата X начальной точки",
	"DrawText.Y": "Координата Y начальной точки",
	"DrawText.Type": "Определяет как именно будет отрисован фон и контур фигуры: Fill - только заливка фона, Stroke - только контур, Both - заливка фона и контур",
	"DrawText.Font": "Определяет шрифт текста",
	"DrawText.Align": "Задает выравнивание текста относительно начальной точки",
	
	"el.DrawImage": "Изображение",
	"DrawImage.Point": "Определяет координаты левого верхнего угла изображения",
	"DrawImage.Image": "Определяет изображение для отрисовки",
	"DrawImage.X": "Координата X левого верхнего угла изображения",
	"DrawImage.Y": "Координата Y левого верхнего угла изображения",
	
	"el.DrawImageRegion": "Часть изображения",
	"DrawImageRegion.Point": "Определяет координаты левого верхнего угла изображения",
	"DrawImageRegion.Image": "Определяет изображение для отрисовки",
	"DrawImageRegion.doSourceX": "Задает координату X левого верхнего угла исходного изображения для отрисовки",
	"DrawImageRegion.doSourceY": "Задает координату Y левого верхнего угла исходного изображения для отрисовки",
	"DrawImageRegion.X": "Координата X левого верхнего угла изображения",
	"DrawImageRegion.Y": "Координата Y левого верхнего угла изображения",
	"DrawImageRegion.SourceX": "Координата X части исходного изображения",
	"DrawImageRegion.SourceY": "Координата Y части исходного изображения",
	"DrawImageRegion.SourceWidth": "Ширина чатси исходного изображения",
	"DrawImageRegion.SourceHeight": "Высота чатси исходного изображения",
	
	"el.FloodFill": "Заливка фигуры по ее контуру",
	"FloodFill.Point": "Опредяет точку, начиная с которой фигура будет залита",
	"FloodFill.Threshold": "Определяет разницу, меньше которой цвета начального пикселя и текущего будут считаться одинаковыми",
	"FloodFill.X": "Координата X начальной точки",
	"FloodFill.Y": "Координата Y начальной точки",
	
	"el.GetPixel": "Получение цвета пикселя",
	"GetPixel.doGetPixel": "Получает цвет пикселя по заданным координатам",
	"GetPixel.onGetPixel": "Событие происходит всякий раз после получения цвета пикселя и выдает его в поток",
	"GetPixel.Canvas": "Определяет канку для получения цвета пикселя",
	"GetPixel.Point": "Определяет координаты пикселя",
	"GetPixel.X": "Координата X пикселя",
	"GetPixel.Y": "Координата Y пикселя",
	
	"el.PathCreator": "Содание контура",
	"PathCreator.doPath": "Создает новый контур",
	"PathCreator.onPath": "Событие происходит всякий раз после создания контура и выдает канву в поток",
	"PathCreator.Canvas": "Определяет канву для создания контура",
	"PathCreator.Mode": "Определяет этап создания контура",
	
	"el.MoveTo": "Установка начальной точки контура",
	"MoveTo.doMoveTo": "Устанавливает начальную точку нового контура",
	"MoveTo.onMoveTo": "Событие происходит всякий раз после установки начальной точки контура и выдает канву в поток",
	"MoveTo.Canvas": "Определяет канву для установки начальной точки контура",
	"MoveTo.Point": "Определяет координаты начальной точки",
	"MoveTo.X": "Координата X начальной точки",
	"MoveTo.Y": "Координата Y начальной точки",

	"el.LineTo": "Прямая линия контура",
	"LineTo.doLineTo": "Рисует прямую линию контура от начальной точки до указанной и перемещает начальную точку на указанную",
	"LineTo.onLineTo": "Событие происходит всякий раз после рисования линии контура и выдает канву в поток",
	"LineTo.Canvas": "Опредяет канву для рисования линии контура",
	"LineTo.Point": "Определяет координаты точки, до которой рисуется линия контура",
	"LineTo.X": "Координата X конечной точки отрезка",
	"LineTo.Y": "Координата Y конечной точки отрезка",

	"el.ArcPath": "Дуга контура",
	"ArcPath.doArc": "Рисует дугу контура с центром в заданной точке, радиусом и начальный и конечным углом дуги",
	"ArcPath.onArc": "Событие происходит всякий раз после рисования дуги контура и выдает канву в поток",
	"ArcPath.Canvas": "Опредяет канву для рисования дуги контура",
	"ArcPath.Point": "Определяет центр окружности",
	"ArcPath.Radius": "Определяет радиус окружности",
	"ArcPath.StartAngle": "Определяет начальный угол дуги",
	"ArcPath.EndAngle": "Определяет конечный угол дуги",
	"ArcPath.X": "Координата X центра окружности",
	"ArcPath.Y": "Координата Y центра окружности",

	"el.RectPath": "Прямоугольник контура",
	"RectPath.doRect": "Рисует прямоугольник по заданным точкам",
	"RectPath.onRect": "Событие происходит всякий раз после рисования прямоугольника контура и выдает канву в поток",
	"RectPath.Canvas": "Опредяет канву для рисования прямоугольника контура",
	"RectPath.Point1": "Определяет начальную точку диагонали прямоугольника",
	"RectPath.Point2": "Определяет конечную точку диагонали прямоугольника",
	"RectPath.X1": "Координата X начала диагонали прямоугольника",
	"RectPath.Y1": "Координата Y начала диагонали прямоугольника",
	"RectPath.X2": "Координата X конца диагонали прямоугольника",
	"RectPath.Y2": "Координата Y конца диагонали прямоугольника",

	"el.DrawQuadraticCurve": "Квадратичная дуга контура",
	"DrawQuadraticCurve.CPoint": "Определяет точку для настройки кривизны дуги",
	"DrawQuadraticCurve.Point": "Определяет конечную точку дуги",
	"DrawQuadraticCurve.CX": "Координата X точки настройки кривизны дуги",
	"DrawQuadraticCurve.CY": "Координата Y точки настройки кривизны дуги",
	"DrawQuadraticCurve.X": "Координата X конечной точки дуги",
	"DrawQuadraticCurve.Y": "Координата Y конечной точки дуги",

	"el.DrawBezierCurve": "Дуга безье контура",
	"DrawBezierCurve.CPoint1": "Определяет первую точку для настройки кривизны дуги",
	"DrawBezierCurve.CPoint2": "Определяет вторую точку для настройки кривизны дуги",
	"DrawBezierCurve.Point": "Определяет конечную точку дуги",
	"DrawBezierCurve.CX1": "Координата X первой точки настройки кривизны дуги",
	"DrawBezierCurve.CY1": "Координата Y первой точки настройки кривизны дуги",
	"DrawBezierCurve.CX2": "Координата X второй точки настройки кривизны дуги",
	"DrawBezierCurve.CY2": "Координата Y второй точки настройки кривизны дуги",
	"DrawBezierCurve.X": "Координата X конечной точки дуги",
	"DrawBezierCurve.Y": "Координата Y конечной точки дуги",

	"el.PathDrawer": "Отрисовка контура",
	"PathDrawer.doDrawPath": "Рисует построенный контур на канве",
	"PathDrawer.onDrawPath": "Событие происходит всякий раз после отрисовки построенного контура и выдает канву в поток",
	"PathDrawer.Canvas": "Опредяет канву для рисования построенного контура",
	"PathDrawer.Mode": "Определяет, что именно нужно сделать с нарисованным контуром: Fill - залить фон, Stroke - отрисовать контур, Clip - ограничить область вывода текущим контуром",

	"el.CanvasTranslate": "Перенос системы координат",
	"CanvasTranslate.doTranslate": "Переносит точку отсчета системы координат в заданную позицию",
	"CanvasTranslate.onTranslate": "Событие происходит всякий раз после переноса системы координат и выдает канву в поток",
	"CanvasTranslate.Canvas": "Определяет канву для переноса системы координат",
	"CanvasTranslate.X": "Позиция по оси X",
	"CanvasTranslate.Y": "Позиция по оси Y",

	"el.CanvasRotate": "Вращение системы координат",
	"CanvasRotate.doRotate": "Вращает систему координат на заданный угол",
	"CanvasRotate.onRotate": "Событие происходит всякий раз после вращения системы координат и выдает канву в поток",
	"CanvasRotate.Canvas": "Определяет канву для вращения системы координат",
	"CanvasRotate.Angle": "Определяет угол, на который необходимо повернуть систему координат",

	"el.CanvasScale": "Масштабирование системы координат",
	"CanvasScale.doScale": "Масштабирует систему координат по двум осям",
	"CanvasScale.onScale": "Событие происходит всякий раз после масштабирования системы координат и выдает канву в поток",
	"CanvasScale.Canvas": "Определяет канву для масштабирования системы координат",
	"CanvasScale.X": "Масштаб по оси X",
	"CanvasScale.Y": "Масштаб по оси Y",

	"el.CanvasState": "Восстановление/сохранение состояния канвы",
	"CanvasState.doState": "Восстанавливает/сохраняет текущее состояние канвы",
	"CanvasState.onState": "Событие происходит всякий раз после изменения состояния канвы и выдает её в поток",
	"CanvasState.Canvas": "Определяет канву для сохранения/восстановления её состояния",
	"CanvasState.Mode": "Определяет восстановление/сохранение текущего состояния канвы",

	"AudioInput.Input": "Входной канал",
	"AudioInput.AudioContext": "Имя контекста",

	"AudioOutput.AudioContext": "Имя контекста",
	"AudioOutput.OutputNumber": "Количество выходных каналов",

	"el.AudioContext": "Аудио контекст",
	"AudioContext.Name": "Имя контекста для его использования в элементах",
	
	"el.AudioDestination": "Вывод аудио на колонки",

	"el.AudioAnalyser": "Анализ аудио потока",
	"AudioAnalyser.doGetData": "Получает данные аудиопотока",
	"AudioAnalyser.onData": "Событие происходит всякий раз после получения данных и выдает их в поток",
	"AudioAnalyser.Type": "Определяет тип данных, который возвращает анализатор",

	"el.AudioOscillator": "Генератор звукового сигнала",
	"AudioOscillator.doStart": "Создает генератор звукового сигнала и запускает его",
	"AudioOscillator.doStop": "Останавливает последний запущенный генератор",
	"AudioOscillator.onStart": "Событие происходит всякий раз после запуска генератора",
	"AudioOscillator.onStop": "Событие происходит всякий раз после остановки звукового сигнала",
	"AudioOscillator.Output": "Выходной канал",
	"AudioOscillator.Frequency": "Частота выходного сигнала",
	"AudioOscillator.Detune": "Расстройка (измеряется в центах)",
	"AudioOscillator.Type": "Форма генерируемого сигнала: sine - синусойда, square - прямоугольная, sawtooth - пилообразная, triangle - треугольная",
	"AudioOscillator.Delay": "Время проигрывания сигнала (0 - бесконечно)",

	"el.AudioBufferSource": "Источник звука из буфера",
	"AudioBufferSource.doStart": "Создает источник звука для заданного аудио буфера и запускает его",
	"AudioBufferSource.doStop": "Останавливает последний запущенный источник звука",
	"AudioBufferSource.onStart": "Событие происходит всякий раз после запуска источника звука",
	"AudioBufferSource.onStop": "Событие происходит всякий раз после остановки звукового сигнала",
	"AudioBufferSource.Output": "Выходной канал",
	"AudioBufferSource.Loop": "Цикличное проигрывание звука по кругу",

	"el.AudioDecodeData": "Преобразование массива данных в звук",
	"AudioDecodeData.doDecode": "Преобразует массив данных в буфер звуковых данных",
	"AudioDecodeData.onDecode": "Событие происходит всякий раз после преобразования и выдает созданный буфер в поток",
	"AudioDecodeData.Buffer": "Содержит буфер со звуковыми данными",
	"AudioDecodeData.Data": "Определяет массив звуковый данных",
	"AudioDecodeData.AudioContext": "Имя контекста",

	"el.AudioConvolver": "Свертка",
	"AudioConvolver.doBuffer": "Задает буфер с данными сиглана свертки",
	"AudioConvolver.Output": "Выходной канал",
	"el.AudioGain": "Усилитель",
	"AudioGain.Output": "Выходной канал",
	"AudioGain.Gain": "Коэффициент ослабления звука",
	"el.AudioDelay": "Задержка",
	"AudioDelay.Output": "Выходной канал",
	"AudioDelay.Time": "Время задержки звукового сигнала",
	"el.AudioFilter": "Частоный фильтр",
	"AudioFilter.Output": "Выходной канал",
	"AudioFilter.Type": "Тип фильтра: lowpass - фильтр нижних частот (обрезает все, что выше выбранной частоты), highpass -  высокочастотный фильтр (обрезает все, что ниже выбранной частоты), bandpass - полосовой фильтр (пропускает только определенную полосу частот), lowshelf - полка на низких частотах (означает, что усиливается или ослабляется все, что ниже выбранной частоты), highshelf - полка на высоких частотах (означает, что усиливается или ослабляется все, что выше выбранной частоты), peaking -  узкополосный пиковый фильтр (усиливает определенную частоту, народное название – “фильтр-колокол”), notch - узкополосный режекторный фильтр (ослабляет определенную частоту, народное название – “фильтр-пробка”), allpass - фильтр, пропускающий все частоты сигнала с равным усилением, однако изменяющий фазу сигнала",
	"AudioFilter.Gain": "Определяет уровень усиления или ослабления данной частоты в децибелах",
	"AudioFilter.Frequency": "Определяет частоту, на которой базируется фильтр",
	"AudioFilter.Q": "Определяет ширину полосы вокруг выбранной частоты, к которой будет применяться усиление или ослабление",
	
	"el.Converter": "Преобразование данных",
	"Converter.doConvert": "Преобразует исходные данные в заданный тип",
	"Converter.onConvert": "Событие происходит всякий раз после преобразования данных и выдает результат в поток",
	"Converter.Data": "Определяет данные для преобразования",
	"Converter.Result": "Содержит результат преобразования",
	"Converter.Mode": "Направление преобразования данных: IntToStr - целое число в строку, StrToInt - строку в целое число, RealToInt - действительное число в целое, CharToInt - символ в его код, IntToChar - код символа в символ",
	
	"el.Stack": "Стек",
	"Stack.doPush": "Сохраняет указанные данные в стеке",
	"Stack.doPop": "Извлекает из стека данные",
	"Stack.onPush": "Событие происходит всякий раз после сохранения данных в стеке и выдает эти данные в поток",
	"Stack.onPop": "Событие происходит всякий раз после извлечения данных из стека и выдает их в поток",
	"Stack.Data": "Определяет данные для добавления в стек",
	"Stack.Result": "Содержит данные извлеченные из стека",
	
	"el.GlobalVar": "Глобальная переменная",
	"GlobalVar.doValue": "Устанавливает значение глобальной переменной",
	"GlobalVar.onValue": "Событие происходит всякий раз после установки значения глобальной переменной и выдает ее в поток",
	"GlobalVar.Var": "Содержит значение глобальной переменной",
	"GlobalVar.Name": "Имя переменной",
	"GlobalVar.Default": "Данные по умолчанию",
	"GlobalVar.Save": "Сохранять значение переменной в глобальном хранилище, т.е. данные будут восстановлены при следующем запуске приложения",
	
	"el.Time": "Время",
	"Time.doTime": "Получает текущее время системы",
	"Time.onTime": "Событие происходит всякий раз после получения текущего времени",
	"Time.FormatTime": "Содержит полученное время системы в соответствии с выбранным форматом",
	"Time.TimeMillis": "Содержит полученное время системы в миллисекундах",
	"Time.Format": "Формат выдачи времени",
	
	"el.Counter": "Целочисленный счетчик",
	"Counter.doNext": "Генерирует следующее значение счетчика",
	"Counter.doReset": "Сбрасывает счетчик на значение по умолчанию",
	"Counter.onCounter": "Событие происходит всякий раз после генерации следующего значения счетчика и выдает его в поток",
	"Counter.Value": "Содержит текущее значение счетчика",
	"Counter.Min": "Определяет минимальное значение счетчика",
	"Counter.Max": "Определяет максимальное значение счетчика",
	"Counter.Step": "Определяет шаг счетчика",
	"Counter.Default": "Начальное значение счетчика",
	
	"el.Random": "Случайное действительное число",
	"Random.doRandom": "Генерирует следующее случайное число",
	"Random.onRandom": "Событие происходит всякий раз при генерации случайного числа и выдает в поток само число",
	"Random.Result": "Содержит результат последней генерации",
	
	"el.MathParse": "Вычисление математического выражения",
	"MathParse.doCalc": "Вычисляет результат математического выражения свойства MathStr",
	"MathParse.doClear": "Сбрасывает значение внутренней переменной $result на значение по умолчанию",
	"MathParse.onResult": "Происходит после успешного вычисления математического выражения и выдает результат в поток",
	"MathParse.Result": "Хранит результаты предыдущего вычисления",
	"MathParse.X": "Аргумент для вставки в математическое выражение",
	"MathParse.MathStr": "Формула вычисления выражения",
	"MathParse.Args": "Аргументы используемые в формуле",
	"MathParse.Default": "Значение внутренней переменной $result по умолчанию",
	
	"el.If_else": "Сравнение двух операндов",
	"If_else.doCompare": "Производит сравнение первого операнда со вторым",
	"If_else.onTrue": "Событие происходит всякий раз при выполнении условия сравнения",
	"If_else.onFalse": "Событие происходит всякий раз при невыполнении условия сравнения",
	"If_else.Op1": "Операнд 1",
	"If_else.Op2": "Операнд 2",
	"If_else.Type": "Способ сравнения двух аргументов",
	
	"el.Case": "Каскадная проверка",
	"Case.doCase": "Производит сравнение значения из потока с параметром Value",
	"Case.onNextCase": "Событие происходит всякий раз при неравенстве значения из потока значению параметра Value и выдает в поток исходные данные",
	"Case.onTrue": "Событие происходит всякий раз при равенстве значения из потока значению параметра Value и выдает в поток данные из ячейки DataOnTrue",
	"Case.Data": "Данные для сравнения с заданным значением",
	"Case.Value": "Знаение для сравнения",
	"Case.DataOnTrue": "Данные, выдаваемые в поток событием onTrue",
	
	"el.For": "Цикл",
	"For.doFor": "Запускает цикл со счетчиком",
	"For.doStop": "Преждевременная остановка цикла",
	"For.onEvent": "Событие происходит всякий раз после очередной итерации цикла и выдает значение счетчика в поток",
	"For.onStop": "Событие происходит всякий раз после окончания цикла",
	"For.Position": "Возвращает текущее значение счетчика",
	"For.Start": "Определяет начальное значение счетчика",
	"For.End": "Определяет значение, при пересечении которого происходит выход из цикла",
	"For.Step": "Определяет шаг счетчика",
	
	"el.Hub": "Разветвитель",
	"Hub.doEvent": "Вызывает последовательно все события onEvent",
	"Hub.onEvent": "Событие происходит всякий раз после вызова метода doEvent",
	"Hub.InCount": "Количество входящих потоков",
	"Hub.OutCount": "Количество исходящих потоков",
	
	"el.DoData": "Преобразователь данных в поток",
	"DoData.doData": "Перенаправляет данные с точки Data или одноименного свойства в поток",
	"DoData.onEventData": "Событие происходит всякий раз при перенаправлении данных в поток",
	"DoData.Data": "Данные для перенаправления в поток",
	
	"el.Memory": "Ячейка памяти",
	"Memory.doValue": "Запоминает данные в памяти",
	"Memory.doClear": "Устанавливает ячейку памяти в исходное состояние (т.е. приравнивает ей значение по умолчанию)",
	"Memory.onData": "Событие происходит всякий раз после изменения данных, их же и выдавая обратно в поток",
	"Memory.Data": "Данные для сохранения в памяти",
	"Memory.Value": "Содержит текущее значение ячейки памяти",
	"Memory.Default": "Содержит данные в ячейки памяти по умолчанию",
	
	"el.IndexToChannel": "Преобразование индекса в поток",
	"IndexToChannel.doEvent": "Вызывает одно из событий onEvent в соответствие с его индексом (верхний индекс равен 0). Если индекс больше, чем кол-во точек onEvent, то ничего не происходит",
	"IndexToChannel.Index": "Определяет индекс вызываемого события",
	"IndexToChannel.onEvent": "Событие происходит всякий раз после определения канала по индексу",
	"IndexToChannel.Count": "Количество исходящих потоков",
	"IndexToChannel.Data": "Данные, выдаваемые в поток событиями onEvent",
	
	"el.ChannelToIndex": "Преобразование потока в индекс",
	"ChannelToIndex.onIndex": "Событие происходит после вызова одного из методов doWork и возвращает в поток индекс этого метода (верхний индекс равен 0)",
	"ChannelToIndex.doWork": "Вызывает событие onEvent со своим индексом в потоке",
	"ChannelToIndex.Count": "Количество входящих потоков",
	
	"el.TimeCounter": "Счетчик времени",
	"TimeCounter.doStart": "Запоминает текущее значение времени",
	"TimeCounter.doStop": "Вычисляет разницу между текущим и сохранённым временем",
	"TimeCounter.onStart": "Событие происходит всякий раз после сохранения текущего времени",
	"TimeCounter.onStop": "Событие происходит всякий раз после получения разницы времени и выдаёт её в поток",
	"TimeCounter.Elapsed": "Содержит разницу времени с последнего измерения",
	
	"el.Switch": "Переключатель",
	"Switch.doSwitch": "Переключить состояние с On на Off или наоборот с Off на On",
	"Switch.doReset": "Сбросить компонент в состояние Выключено(Off)",
	"Switch.doOn": "Переключить в состояние Включено(On)",
	"Switch.onSwitch": "Событие происходит после изменения состояния и выдает в поток DataOn в состояние Включено(On) или DataOff в состояние Выключено(Off)",
	"Switch.onOn": "Событие происходит всякий раз при переходе компонента в состояние Включено(On) и выдает в поток DataOn",
	"Switch.onOff": "Событие происходит всякий раз при переходе компонента в состояние Выключено(Off) и выдает в поток DataOff",
	"Switch.State": "Содержит текущее состояние ключа",
	"Switch.DataOn": "Определяет данные для состояния Включено(On)",
	"Switch.DataOff": "Определяет данные для состояния Выключено(Off)",
	"Switch.Default": "Определяет состояние ключа по умолчанию",
	
	"el.MultiElement": "Контейнер с цифровыми точками",
	"el.MultiElementEx": "Контейнер с именными точками",
	
	"el.CableWork": "Кабель источник события",
	"CableWork.onCable": "Событие происходит всякий раз после вызова любого метода и выдает в поток сигнал с именем канала и данными из потока",
	"CableWork.Wire": "Список входных каналов",
	
	"el.CableEvent": "Кабель приемник события",
	"CableEvent.doCable": "Передает сигнал по каналу с заданным именем и исходными данными",
	"CableEvent.Wire": "Список выходных каналов",
	
	"el.CableVar": "Кабель запроса данных",
	"CableVar.Cable": "Запрашивает данные по каналу с заданным именем",
	"CableVar.Wire": "Список выходных каналов",
	
	"el.CableData": "Кабель источник данных",
	"CableData.Cable": "Содержит данные из заданного канала",
	"CableData.Wire": "Список входных каналов",
	
	"el.Array": "Массив",
	"Array.doClear": "Очищает массив",
	"Array.onClear": "Событие происходит всякий раз после очистки массива",
	"Array.Array": "Содержит массив данных",

	"el.Matrix": "Двумерный массив",
	"Matrix.doClear": "Очищает матрицу",
	"Matrix.onClear": "Событие происходит всякий раз после очистки матрицы",
	"Matrix.Array": "Содержит матрицу с данными",
	"Matrix.Width": "Длина матрицы (количество столбцов)",
	"Matrix.Height": "Высота матрицы (количество строк)",
	
	"el.MatrixEnum": "Перебор элементов матрицы",
	"MatrixEnum.doEnum": "Перебирает все элементы матрицы",
	"MatrixEnum.onEnum": "Событие происходит всякий раз после получения очередного элемента и выдает его в поток",
	"MatrixEnum.onEnd": "Событие происходит всякий раз после окончания перебора",
	"MatrixEnum.Matrix": "Определяет матрицу для перебора элементов",
	"MatrixEnum.Item": "Содержит текущий элемент матрицы",
	"MatrixEnum.Index": "Содержит указатель(массив) строки и столбца текущего элемента в формате [column,row]",
	"MatrixEnum.Data": "Определяет данные, выдаваемые в поток событием onEnum: Item - значение текущего элемента, Array - массив в формате [item,column,row]",
	
	"el.MatrixRead": "Чтение значение элемента матрицы",
	"MatrixRead.doRead": "Читает заданный элемент матрицы",
	"MatrixRead.onRead": "Событие происходит всякий раз после чтения значения элемента матрицы и выдает его в поток",
	"MatrixRead.Value": "Содержит прочтенное значение элемента матрицы",
	"MatrixRead.Matrix": "Определяет матрицу, значение элемента которой необходимо прочесть",
	"MatrixRead.Index": "Определяет индекс элемента матрицы (массив из номера колонки и строки [column, row])",
	"MatrixRead.RangeCheck": "Проверять корректность индекса на выход за пределы размерности матрицы",

	"el.MatrixWrite": "Запись значения элемента матрицы",
	"MatrixWrite.doWrite": "Записывает указанное значение в элемент матрицы",
	"MatrixWrite.onWrite": "Событие происходит всякий раз после записи элемента матрицы и выдает саму матрицу в поток",
	"MatrixWrite.Matrix": "Определяет матрицу, значение элемента которой необходимо записать",
	"MatrixWrite.Index": "Определяет индекс элемента матрицы (массив из номера колонки и строки [column, row])",
	"MatrixWrite.Value": "Определяет значение для записи в элемент матрицы",
	"MatrixWrite.RangeCheck": "Проверять корректность индекса на выход за пределы размерности матрицы",
	
	"el.ArrayRead": "Чтение массива",
	"ArrayRead.doRead": "Читает элемент массива с указанным индексом",
	"ArrayRead.onRead": "Событие происходит всякий раз после чтения элемента массива и выдает его в поток",
	"ArrayRead.Array": "Определяет массив для чтения элемента",
	"ArrayRead.Index": "Определяет индекс элемента для чтения",
	"ArrayRead.Value": "Содержит значение пречтенного элемента массива",
	
	"el.ArrayWrite": "Запись массива",
	"ArrayWrite.doWrite": "Записывает элемент массива с указанным индексом",
	"ArrayWrite.onWrite": "Событие происходит всякий раз после записи элемента массива и выдает массив в поток",
	"ArrayWrite.Array": "Определяет массив для записи элемента",
	"ArrayWrite.Index": "Определяет индекс элемента для записи",
	"ArrayWrite.Value": "Определяет значение элемента",
	
	"el.ArrayAdd": "Добавление элемента",
	"ArrayAdd.doAdd": "Добавляет элемент в массив",
	"ArrayAdd.onAdd": "Событие происходит всякий раз после добавления элемента в массив и выдает массив в поток",
	"ArrayAdd.Array": "Определяет массив для добавления элемента",
	"ArrayAdd.Value": "Определяет значение нового элемента",
	
	"el.ArrayRemove": "Удаление элемента",
	"ArrayRemove.doRemove": "Удаляет элемент из массива",
	"ArrayRemove.onRemove": "Событие происходит всякий раз после удаления элемента из массива и выдает массив в поток",
	"ArrayRemove.Array": "Определяет массив для удаления элемента",
	"ArrayRemove.Index": "Определяет индекс удаляемого элемента",
	
	"el.ArrayEnum": "Перебор элементов",
	"ArrayEnum.doEnum": "Перебирает элементы массива",
	"ArrayEnum.onEnum": "Событие происходит всякий раз после получения очередного элемента и выдает его в поток",
	"ArrayEnum.onEnd": "Событие происходит всякий раз после окончания перебора элементов",
	"ArrayEnum.Array": "Определяет массив для перебора элементов",
	"ArrayEnum.Item": "Содержит текущий элемент массива",
	"ArrayEnum.Index": "Содержит текущий индекс элемента массива",
	"ArrayEnum.Direction": "Определяет направление перебора массива",
	
	"el.ArraySplit": "Преобразование строки в массив",
	"ArraySplit.doSplit": "Разбивает строку по указанному разделителю на элементы массива",
	"ArraySplit.onSplit": "Событие происходит всякий раз после разбиения строки и выдает полученный массив в поток",
	"ArraySplit.String": "Определяет строку для преобразования в массив",
	"ArraySplit.Delimiter": "Определяет разделитель элементов массива в строке",
	
	"el.ArraySize": "Размер массива",
	"ArraySize.doSize": "Получает размер массива",
	"ArraySize.onSize": "Событие происходит всякий раз после получения размера массива и выдает его в поток",
	"ArraySize.Size": "Содержит размер массива",
	"ArraySize.Array": "Массив для определения его размера",
	
	"el.ArrayBuilder": "Конструктор массива",
	"ArrayBuilder.doBuild": "Собирает массив из заданных элементов",
	"ArrayBuilder.onBuild": "Событие происходит всякий раз после сборки массива и выдает его в поток",
	"ArrayBuilder.Items": "Определяет список значений, из которых формируется массив",
	
	"el.ArrayJoin": "Преобразование массива в строку",
	"ArrayJoin.doJoin": "Соединяет все элементы массива в строку и вставляет между ними указанный разделитель",
	"ArrayJoin.onJoin": "Событие происходит всякй раз после преобразования и выдает полученную строку в поток",
	"ArrayJoin.Array": "Массив для преобразования в строку",
	"ArrayJoin.Separator": "Разделитель между элементами массива в строке",

	"el.ArrayIndexOf": "Поиск элемента массива",
	"ArrayIndexOf.doIndexOf": "Ищет указанный элемент в массиве",
	"ArrayIndexOf.onIndexOf": "Событие происходит всякй раз после поиска элемента в массиве и выдает его индекс в поток, либо -1, если элемент не был найден",
	"ArrayIndexOf.Array": "Массив для поиска в нем элемента",
	"ArrayIndexOf.Value": "Значение искомого элемента массива",
	"ArrayIndexOf.FromIndex": "Индекс элемента масссива, с которого начинать поиск",
	
	"el.JSON": "Преобразование между строкой и JSON",
	"JSON.doConvert": "Преобразует строку в JSON или наоборот",
	"JSON.onConvert": "Событие происходит всякий раз после преобразования и выдает результат в поток",
	"JSON.Data": "Определяет данные для преобразования",
	"JSON.Result": "Содержит результат преобразования",
	"JSON.Mode": "Определяет операцию над данными: Decode - преобразование из строки в объект, Encode - сериализация объекта в строку",
	
	"el.JSON_Field": "Чтение значения поля объекта",
	"JSON_Field.doGet": "Читает поле с указанным именем для заданного объекта",
	"JSON_Field.onGet": "Событие происходит всякий раз после чтения поля и выдает его значение в поток",
	"JSON_Field.Object": "Определяет объект для чтения его поля",
	"JSON_Field.Name": "Определяет имя поля объекта",
	"JSON_Field.Result": "Содержит значение поля объекта после чтения",
	
	"el.JSON_Enum": "Перебор полей объекта",
	"JSON_Enum.doEnum": "Перебирает все поля объекта",
	"JSON_Enum.onEnum": "Событие происходит всякий раз после получения имени очередного поля объекта и выдает его в поток",
	"JSON_Enum.onEndEnum": "Событие происходит всякий раз после окончания перебора",
	"JSON_Enum.Object": "Определяет объект для перебора его полей",
	
	"el.JSON_Field_Set": "Запись значения поля объекта",
	"JSON_Field_Set.doSet": "Записывание указанное значение в поле объекта с заданным именем",
	"JSON_Field_Set.onSet": "Событие происходит всякий раз после записи значения и выдает объект обратно в поток",
	"JSON_Field_Set.Object": "Определяет объект, поле которого необходимо записать",
	"JSON_Field_Set.Name": "Определяет имя поля объекта",
	"JSON_Field_Set.Value": "Определяет значение для записи",

	"el.Object": "Пустой объект ",
	"Object.doCreate": "Создает пустой объект",
	"Object.onCreate": "Событие происходит всякий раз после создания объекта и выдает его в поток",
	"Object.Object": "Содержит ссылку на созданный объект",

	"el.ObjectToArray": "Преобразователь полей в массив",
	"ObjectToArray.doConvert": "Преобразует поля объекта в массив",
	"ObjectToArray.onConvert": "Событие происходит всякий раз после преобразования и выдает полученный массив в поток",
	"ObjectToArray.Array": "Содержит результирующий массив",
	"ObjectToArray.Object": "Определяет объект для преобразования его полей в массив",
	"ObjectToArray.Fields": "Список имен полей, значения которых необходимо записать в массив",

	"el.ObjectReader": "Чтение полей объекта",
	"ObjectReader.doRead": "Читает указанные поля объекта",
	"ObjectReader.Object": "Опредяет объект для чтения его полей",
	"ObjectReader.EventFields": "Содержит список имен полей объекта, значения которых необходимо выдать в событии. Имя поля должно содержать префикс on",
	"ObjectReader.VarFields": "Содержит список имен полей объекта, значения которых необходимо получить через точки Var",
	
	"el.StrList": "Список строк",
	"StrList.doAdd": "Добавляет строку в список",
	"StrList.doText": "Инициализирует список строками разделенными символом \n",
	"StrList.doDelete": "Удаляет строку из списка по ее индексу",
	"StrList.onChange": "Событие происходит всякий раз при изменении списка строк",
	"StrList.Text": "Хранит список строк, разделенных символом \n",
	"StrList.Array": "Содержит список в виде массива строк",
	"StrList.Str": "Определяет строку для добавления в список",
	"StrList.Strings": "Определяет строки по умолчанию",
	
	"el.StrCat": "Соединение двух строк в одну",
	"StrCat.doStrCat": "Соединяет строки Str1 и Str2",
	"StrCat.onStrCat": "Событие происходит всякий раз при соединении двух строк и выдает результат в поток",
	"StrCat.Result": "Содержит результат операции",
	"StrCat.Str1": "Строка 1",
	"StrCat.Str2": "Строка 2",
	
	"el.Copy": "Копирование части строки",
	"Copy.doCopy": "Копирует из строки Str символы, начиная с позиции Position в количестве Count штук",
	"Copy.onCopy": "Событие происходит всякий раз после копирования части строки и выдает ее в поток",
	"Copy.Result": "Хранит результат операции",
	"Copy.Str": "Определяет строку, из которой необходимо скопировать символы",
	"Copy.Position": "Определяет позицию, с которой копируются символы",
	"Copy.Count": "Определяет кол-во копируемых символов",
	
	"el.FormatStr": "Форматирование строки по маске",
	"FormatStr.doString": "Формирует строку по маске Mask",
	"FormatStr.onFString": "Событие происходит всякий раз после формирования строки и выдает ее в поток",
	"FormatStr.FString": "Содержит результат формирования строки по маске",
	"FormatStr.Str": "Определяет строку для вставки в маску вместо %N",
	"FormatStr.DataCount": "Определяет количество значений для вставки в строку",
	"FormatStr.Mask": "Определяет маску строки",
	
	"el.Position": "Позиция вхождения одной строки в другую",
	"Position.doPosition": "Производит поиск строки Search в строке String, начиная с позиции FromIndex",
	"Position.onPosition": "Событие происходит всякий раз при завершении поиска и выдает найденную позицию в поток",
	"Position.Result": "Содержит найденную позицию",
	"Position.String": "Определяет строку, в которой производится поиск",
	"Position.Search": "Определяет строку, позицию вхождения которой необходимо найти",
	"Position.FromIndex": "Определяет начальную позицию поиска",
	
	"el.Replace": "Замена части строки",
	"Replace.doReplace": "Производит замену подстроки SubStr в строке SrcStr на строку DestStr (заменяются все найденные подстроки)",
	"Replace.onReplace": "Событие происходит всякий раз после замены строки и выдает результат в поток",
	"Replace.SrcStr": "Строка, в которой происходит замена",
	"Replace.SubStr": "Подстрока, которую нужно заменить",
	"Replace.DestStr": "Подстрока, на которую нужно заменить",
	"Replace.Result": "Содержит результат замены",
	"Replace.UseRegExp": "Замена строки с использованием регулярного выражения",
	
	"el.StrPart": "Разделитель строки",
	"StrPart.doSplit": "Разбивает строку по заданному разделителю",
	"StrPart.onSplit": "Событие происходит после отделения левой части строки и выдает в поток её правую часть",
	"StrPart.onPart": "Событие происходит сразу после разбиения строки перед событием onSplit и выдает в поток её левую часть",
	"StrPart.Str": "Определяет строку для разбиения на части",
	"StrPart.Result": "Содержит левую часть строки после разбиения",
	"StrPart.Char": "Определяет символ, по которому строка будет разбита на части",
	
	"el.Insert": "Вставка одной строки в другую",
	"Insert.doInsert": "Вставляет подстроку SubStr в строку Str, начиная с позиции Position",
	"Insert.onInsert": "Событие происходит всякий раз после выполнения вставки и выдаёт результат в поток",
	"Insert.Str": "Определяет строку, в которую необходимо вставить подстроку",
	"Insert.SubStr": "Подстрока для вставки",
	"Insert.Position": "Определяет позицию, с которой вставляется подстрока (начиная с 0)",
	"Insert.Result": "Содержит результирующую строку",
	
	"el.Delete": "Удаление части строки",
	"Delete.doDelete": "Удаляет часть строки",
	"Delete.onDelete": "Событие происходит всякий раз после удаления части строки и выдает результат в поток",
	"Delete.Str": "Строка для удаления из нее заданного количества символов",
	"Delete.Position": "Позиция в строке, с которой необходимо удалить заданное количество символов",
	"Delete.Count": "Количество символов, которое необходимо удалить",
	"Delete.Result": "Содержит результат удаления части строки",
	
	"el.Length": "Длина строки",
	"Length.doLength": "Вычисляет длину строки",
	"Length.onLength": "Событие происходит всякий раз после вычисления длины строки и выдает ее в поток",
	"Length.Str": "Определяет строку, чью длину необходимо вычислить",
	"Length.Result": "Содержит результат вычисления",
	
	"el.StrCase": "Регистр символов строки",
	"StrCase.doModify": "Приводит строку Str к регистру, определяемому параметром Type",
	"StrCase.onModify": "Событие происходит всякий раз после изменения регистра строки и выдает ее в поток",
	"StrCase.Str": "Определяет строку, чей регистр необходимо изменить",
	"StrCase.Result": "Содержит результат изменения регистра",
	"StrCase.Type": "Определяет результирующий регистр символов: Lower - нижний, Upper - верхний",
	
	"el.RE_Search": "Поиск по регулярному выражению",
	"RE_Search.doExec": "Ищет совпадение в строке по указанной маске",
	"RE_Search.onExec": "Событие происходит всякий раз после поиска совпадений в строке и выдает результат в виде массива совпадений в поток",
	"RE_Search.onNotFound": "Событие происходит всякий раз после поиска совпадений в строке и отсутствия хотя бы одного совпадения",
	"RE_Search.String": "Определяет строку для поиска",
	"RE_Search.Mask": "Определяет маску для поиска в строке",
	
	"el.FileInfo": "Информация о файле",
	"FileInfo.doInfo": "Получает информацию о файле",
	"FileInfo.onInfo": "Событие происходит всякий раз после получения информации о файле и выдает его в поток",
	"FileInfo.Name": "Содержит имя файла",
	"FileInfo.Size": "Содержит размер файла",
	"FileInfo.Mime": "Содержит mime тип файла",
	"FileInfo.Time": "Содержит дату создания файла",
	"FileInfo.File": "Определяет файл для получения информации о нем",
	
	"el.FileRead": "Чтение файла",
	"FileRead.doRead": "Читает данные из файла",
	"FileRead.onRead": "Событие происходит всякий раз после чтения данных из файла и выдает их в поток",
	"FileRead.File": "Определяет файл для чтения данных из него",
	"FileRead.Type": "Определяет тип данных, который необходимо получить после чтения: Text - простой текст, ArrayBuffer - массив байтов, DataURL - ссылка на blob",
	
	"el.ODialog": "Диалог выбора файла",
	"ODialog.doExecute": "Открывает диалог для выбора файла с текущего компьютера",
	"ODialog.onExecute": "Событие происходит всякий раз после выбора очередного файла и выдает его в поток",
	"ODialog.Filter": "Определяет фильтр по расширению файлов",
	"ODialog.Select": "Позволяет выбрать в диалоге более одного файла",
	
	"el.Message": "Всплывающее сообщение",
	"Message.doMessage": "Отображает стандартное модальное всплывающее сообщение",
	"Message.onMessage": "Событие происходит всякий раз после закрытия сообщения",
	"Message.Text": "Определяет текст для показа в сообщении",
	
	"el.Timer": "Таймер",
	"Timer.doTimer": "Запускает таймер",
	"Timer.doStop": "Останавливает таймер",
	"Timer.onTimer": "Событие происходит всякий раз при очередной итерации таймера",
	"Timer.Interval": "Интервал срабатывания таймера в миллисекундах",
	"Timer.AutoStop": "Счетчик автоматической остановки таймера",
	
	"el.Notification": "Всплывающее уведомление",
	"Notification.doNotify": "Показывает уведомление в трее",
	"Notification.doClose": "Принудительно закрывает уведомление",
	"Notification.onClick": "Событие происходит всякий раз после клика на уведомлении",
	"Notification.onClose": "Событие происходит всякий раз после закрытия уведомления",
	"Notification.Text": "Определяет текст уведомления",
	"Notification.Content": "Определяет содержимое уведомления",
	"Notification.IconURL": "Определяет URL иконки, отображаемое слева от текста уведомления (поддерживается не всеми браузерами)",
	
	"el.Inline": "Вставка Javascript",
	"Inline.WorkCount": "Количество методов",
	"Inline.EventCount": "Количество событий",
	"Inline.Code": "Код на языке Javascript",
	
	"el.GeoLocation": "Геолокация",
	"GeoLocation.doLocation": "Определяет текущую геопозицию",
	"GeoLocation.onLocation": "Событие происходит всякий раз после определения геопозиции и выдает ее в поток",
	
	"el.Host": "Получение IP",
	"Host.doIP": "Получение текущего внешнего IP",
	"Host.onIP": "Событие происходит всякий раз после получения текущего IP и выдает его в поток",
	
	"el.HTTP_Get": "Закачка по HTTP",
	"HTTP_Get.doDownload": "Загружает содержимое указанной ссылки по HTTP протоколу",
	"HTTP_Get.onDownload": "Событие происходит всякий раз после закачки содержимого ссылки и выдает его в поток",
	"HTTP_Get.onError": "Событие происходит всякий раз после ошибки во время закачки указанного URL и выдает её код в поток",
	"HTTP_Get.URL": "Определяет URL ссылки",
	
	"el.URLBuilder": "Конструктор URL",
	"URLBuilder.doBuild": "Собирает строку URL из указанных параметров",
	"URLBuilder.onBuild": "Событие происходит всякий раз после сбора строки URL и выдает её в поток",
	"URLBuilder.Result": "Содержит результирующую строку URL",
	"URLBuilder.Args": "Содержит список значений для формирования URL в формате ArgName=Value",
	
	"el.XMLHttpRequest": "AJAX запрос",
	"XMLHttpRequest.doOpen": "Открывает соединение с указанным URL",
	"XMLHttpRequest.doSend": "Отправляет данные на сервер",
	"XMLHttpRequest.onLoad": "Событие происходит всякий раз после успешной загрузки данных и выдает их в поток",
	"XMLHttpRequest.onError": "Событие происходит всякий раз после возникновения ошибки и выдает ее код в поток",
	"XMLHttpRequest.URL": "Определяет URL, на который отправляются данные",
	"XMLHttpRequest.Content": "Определяет данные для отправки",
	"XMLHttpRequest.Data": "Содержит данные полученные от сервера",
	"XMLHttpRequest.Method": "Определяет метод отправки данных на сервер",
	"XMLHttpRequest.ResponseType": "Определяет формат данных, пришедших в ответ от сервера: Text - простой текст, ArrayBuffer - массив байтов, Blob - blob данные, Document - XML документ, Json - данные в формате json",
	
	"el.InfoTip": "Надпись в редакторе",
	"el.LinkTip": "Гиперссылка в редакторе",
	"el.PictureTip": "Отображение картинки в редакторе",
	"el.HubEx": "Хаб",
	"el.GetDataEx": "Доступ к данным",
	
	"el.Debug": "Отладка",
	"Debug.doEvent": "Печатает в консоль текст из потока",
	"Debug.onEvent": "Событие происходит всякий раз после печати данных из потока и выдает их же обратно в поток",
	"Debug.Var": "Содержит данные с точки Data",
	"Debug.Data": "Определяет данные для точки Var",
	"Debug.WEName": "Имя потока Work-Event",
	"Debug.VDName": "Имя потока Var-Data",
	
	"el.Window": "Окно",
	"Window.doOpen": "Открывает новое окно/вкладку",
	"Window.doClose": "Закрывает текущее окно/вкладку или ранее открытое(при заданном имени)",
	"Window.onOpen": "Событие происходит всякий раз после открытия окна/вкладки",
	"Window.Name": "Определяет имя нового окна/вкладки",
	"Window.URL": "Определяет URL страницы для загрузки в новом окне/вкладки",
	"Window.Location": "Содержит адрес текущий страницы",
	"Window.features": "Опции",
	"Window.Toolbar": "Отображать панель инструментов",
	"Window.Directories": "Отображать панель закладок",
	"Window.Status": "Отображать панель состояния",
	"Window.Menubar": "Отображать главное меню",
	"Window.Scrollbars": "Отображать элементы для прокрутки страницы",
	"Window.Resizable": "Возможность изменения размеров окна пользователем",
	"Window.Width": "Ширина окна",
	"Window.Height": "Высота окна",
	
	"el.hcUser": "Пользователь",
	"hcUser.Name": "Имя пользователя",
	"hcUser.UID": "ID пользователя",
	"hcUser.Plan": "Информация о текущем тарифном плане"
}
