{
	"tab.helpers": "Помощники",
	"tab.gui": "Устройства",
	"tab.tools": "Инструменты",
	"group.math": "Математика",
	"group.logic": "Логика",
	"group.serialport": "Serial порт",

	"pack.info.arduino": "Создание скетчей для платформы Arduino. Тестовый пакет для ознакомления с архитектурой.",

	"UIElement.Left": "Положение устройства от левого края макетной платы эмулятора",
	"UIElement.Top": "Положение устройства от верхнего края макетной платы эмулятора",
	"UIElement.Width": "Ширина устройства на макетной плате эмулятора",
	"UIElement.Height": "Высота устройства на макетной плате эмулятора",

	"el.Board": "Плата Arduino",
	"Board.Width": "Ширина макетной платы в эмуляторе",
	"Board.Height": "Высота макетной платы в эмуляторе",
	"Board.Type": "Тип платы Arduino",
	"Board.onSetup": "Событие происходит один раз после запуска программы",
	"Board.onLoop": "Событие происходит каждую итерацию выполнения программы без остановки",

	"el.LED": "Светодиод",
	"LED.doSwitch": "Переключает состояние порта светодиода в соответствии с заданным значением",
	"LED.onSwitch": "Событие происходит всякий раз после переключения состояния порта",
	"LED.Value": "Определяет состояние порта светодиода: 0 - значение LOW, все остальное - значение HIGH",
	"LED.Pin": "Определяет номер пина на плате, к которому подключен светодиод",

	"el.Button": "Кнопка",
	"Button.doCheck": "Проверяет состояние порта, к которому подключена кнопка",
	"Button.onClick": "Событие происходит всякий раз при нажатии кнопки и выдает её состояние в поток",
	"Button.State": "Содержит состояние кнопки",
	"Button.Caption": "Определяет надпись на кнопке в эмуляторе",
	"Button.Mode": "Определяет поведение события onClick: Flow - происходит всегда, Event - происходит только после смены состояния, EventHigh - происходит только после смены состояния с LOW на HIGH",
	"Button.Pin": "Определяет номер пина на плате, к которому подключена кнопка",

	"el.Potentiometer": "Потенциометр",
	"Potentiometer.doRead": "Читает значение с аналогового порта",
	"Potentiometer.onRead": "Событие происходит всякий раз после чтения значения и выдает его в поток",
	"Potentiometer.Value": "Содержит значение, полученное с аналогового порта",
	"Potentiometer.Pin": "Определяет номер аналогового пина на плате, к которому подключен потенциометр",

	"el.Tone": "Генератор прямоугольной волны",
	"Tone.doTone": "Запускает генератор прямоугольной волны заданной частоты на указаном пине",
	"Tone.doStop": "Останавливает генератор на указанном пине",
	"Tone.onTone": "Событие происходит всякий раз после запуска генератора",
	"Tone.Frequency": "Частота прямоугольной волны",
	"Tone.Duration": "Длительность работы генератора (при 0 генерация происходит бесконечно до вызова doStop или перезагрузки платы)",
	"Tone.Pin": "Определяет номер пина на плате, для которого запускается генератор",

	"el.Delay": "Задержка выполнения программы",
	"Delay.doDelay": "Останавливает выполнение программы на заданное количество миллисекунд",
	"Delay.onDelay": "Событие происходит всякий раз после возобновления работы программы",
	"Delay.Miliseconds": "Количество миллисекунд, на которое необходимо остановить программу",

	"el.SerialOpen": "Открытие Serial порта",
	"SerialOpen.doBegin": "Отрывает соединение по Serial порту с заданной скоростью",
	"SerialOpen.doEnd": "Закрывает соединение по Serial порту",
	"SerialOpen.onBegin": "Событие происходит всякий раз после открытия соединения с Serial портом",
	"SerialOpen.Speed": "Скорость соединение по Serial порту",

	"el.SerialPrint": "Запись в Serial порт",
	"SerialPrint.doPrint": "Записывает данные в Serial порт",
	"SerialPrint.onPrint": "Событие происходит всякий раз после записи данных в Serial порт",
	"SerialPrint.Text": "Текст для записи в Serial порт",
	"SerialPrint.Type": "Отправка переноса строки после записи текста в порт",

	"el.SerialRead": "Чтение из Serial порта",
	"SerialRead.doRead": "Читает данные из порта, если они доступны",
	"SerialRead.onRead": "Событие происходит после чтения данных из порта и выдает их в поток",
	"SerialRead.Available": "Определяет доступность данных на Serial порт",
	"SerialRead.Type": "Тип данных для чтения: Byte - 1 байт",

	"el.Counter": "Целочисленный счетчик",
	"Counter.doNext": "Генерирует следующее значение счетчика",
	"Counter.doReset": "Сбрасывает счетчик на значение по умолчанию",
	"Counter.onCounter": "Событие происходит всякий раз после генерации следующего значения счетчика и выдает его в поток",
	"Counter.Value": "Содержит текущее значение счетчика",
	"Counter.Min": "Определяет минимальное значение счетчика",
	"Counter.Max": "Определяет максимальное значение счетчика",
	"Counter.Step": "Определяет шаг счетчика",
	"Counter.Default": "Начальное значение счетчика",
	
	"el.Random": "Случайное действительное число",
	"Random.doRandom": "Генерирует следующее случайное число",
	"Random.onRandom": "Событие происходит всякий раз при генерации случайного числа и выдает в поток само число",
	"Random.Result": "Содержит результат последней генерации",
	
	"el.MathParse": "Вычисление математического выражения",
	"MathParse.doCalc": "Вычисляет результат математического выражения свойства MathStr",
	"MathParse.doClear": "Сбрасывает значение внутренней переменной $result на значение по умолчанию",
	"MathParse.onResult": "Происходит после успешного вычисления математического выражения и выдает результат в поток",
	"MathParse.Result": "Хранит результаты предыдущего вычисления",
	"MathParse.X": "Аргумент для вставки в математическое выражение",
	"MathParse.MathStr": "Формула вычисления выражения",
	"MathParse.Args": "Аргументы используемые в формуле",
	"MathParse.Default": "Значение внутренней переменной $result по умолчанию",
	
	"el.If_else": "Сравнение двух операндов",
	"If_else.doCompare": "Производит сравнение первого операнда со вторым",
	"If_else.onTrue": "Событие происходит всякий раз при выполнении условия сравнения",
	"If_else.onFalse": "Событие происходит всякий раз при невыполнении условия сравнения",
	"If_else.Op1": "Операнд 1",
	"If_else.Op2": "Операнд 2",
	"If_else.Type": "Способ сравнения двух аргументов",
	
	"el.Case": "Каскадная проверка",
	"Case.doCase": "Производит сравнение значения из потока с параметром Value",
	"Case.onNextCase": "Событие происходит всякий раз при неравенстве значения из потока значению параметра Value и выдает в поток исходные данные",
	"Case.onTrue": "Событие происходит всякий раз при равенстве значения из потока значению параметра Value и выдает в поток данные из ячейки DataOnTrue",
	"Case.Data": "Данные для сравнения с заданным значением",
	"Case.Value": "Знаение для сравнения",
	"Case.DataOnTrue": "Данные, выдаваемые в поток событием onTrue",
	
	"el.For": "Цикл",
	"For.doFor": "Запускает цикл со счетчиком",
	"For.doStop": "Преждевременная остановка цикла",
	"For.onEvent": "Событие происходит всякий раз после очередной итерации цикла и выдает значение счетчика в поток",
	"For.onStop": "Событие происходит всякий раз после окончания цикла",
	"For.Position": "Возвращает текущее значение счетчика",
	"For.Start": "Определяет начальное значение счетчика",
	"For.End": "Определяет значение, при пересечении которого происходит выход из цикла",
	"For.Step": "Определяет шаг счетчика",
	
	"el.Hub": "Разветвитель",
	"Hub.doEvent": "Вызывает последовательно все события onEvent",
	"Hub.onEvent": "Событие происходит всякий раз после вызова метода doEvent",
	"Hub.InCount": "Количество входящих потоков",
	"Hub.OutCount": "Количество исходящих потоков",
	
	"el.DoData": "Преобразователь данных в поток",
	"DoData.doData": "Перенаправляет данные с точки Data или одноименного свойства в поток",
	"DoData.onEventData": "Событие происходит всякий раз при перенаправлении данных в поток",
	"DoData.Data": "Данные для перенаправления в поток",
	
	"el.Memory": "Ячейка памяти",
	"Memory.doValue": "Запоминает данные в памяти",
	"Memory.doClear": "Устанавливает ячейку памяти в исходное состояние (т.е. приравнивает ей значение по умолчанию)",
	"Memory.onData": "Событие происходит всякий раз после изменения данных, их же и выдавая обратно в поток",
	"Memory.Data": "Данные для сохранения в памяти",
	"Memory.Value": "Содержит текущее значение ячейки памяти",
	"Memory.Default": "Содержит данные в ячейки памяти по умолчанию",
	
	"el.IndexToChannel": "Преобразование индекса в поток",
	"IndexToChannel.doEvent": "Вызывает одно из событий onEvent в соответствие с его индексом (верхний индекс равен 0). Если индекс больше, чем кол-во точек onEvent, то ничего не происходит",
	"IndexToChannel.Index": "Определяет индекс вызываемого события",
	"IndexToChannel.onEvent": "Событие происходит всякий раз после определения канала по индексу",
	"IndexToChannel.Count": "Количество исходящих потоков",
	"IndexToChannel.Data": "Данные, выдаваемые в поток событиями onEvent",
	
	"el.ChannelToIndex": "Преобразование потока в индекс",
	"ChannelToIndex.onIndex": "Событие происходит после вызова одного из методов doWork и возвращает в поток индекс этого метода (верхний индекс равен 0)",
	"ChannelToIndex.doWork": "Вызывает событие onEvent со своим индексом в потоке",
	"ChannelToIndex.Count": "Количество входящих потоков",
	
	"el.TimeCounter": "Счетчик времени",
	"TimeCounter.doStart": "Запоминает текущее значение времени",
	"TimeCounter.doStop": "Вычисляет разницу между текущим и сохранённым временем",
	"TimeCounter.onStart": "Событие происходит всякий раз после сохранения текущего времени",
	"TimeCounter.onStop": "Событие происходит всякий раз после получения разницы времени и выдаёт её в поток",
	"TimeCounter.Elapsed": "Содержит разницу времени с последнего измерения",
	
	"el.Switch": "Переключатель",
	"Switch.doSwitch": "Переключить состояние с On на Off или наоборот с Off на On",
	"Switch.doReset": "Сбросить компонент в состояние Выключено(Off)",
	"Switch.doOn": "Переключить в состояние Включено(On)",
	"Switch.onSwitch": "Событие происходит после изменения состояния и выдает в поток DataOn в состояние Включено(On) или DataOff в состояние Выключено(Off)",
	"Switch.onOn": "Событие происходит всякий раз при переходе компонента в состояние Включено(On) и выдает в поток DataOn",
	"Switch.onOff": "Событие происходит всякий раз при переходе компонента в состояние Выключено(Off) и выдает в поток DataOff",
	"Switch.State": "Содержит текущее состояние ключа",
	"Switch.DataOn": "Определяет данные для состояния Включено(On)",
	"Switch.DataOff": "Определяет данные для состояния Выключено(Off)",
	"Switch.Default": "Определяет состояние ключа по умолчанию"
}
